<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一键部署hexo静态博客到github pages</title>
      <link href="2023/03/01/hexo-deploy/"/>
      <url>2023/03/01/hexo-deploy/</url>
      
        <content type="html"><![CDATA[<h2 id="github-仓库"><a href="#github-仓库" class="headerlink" title="github 仓库"></a>github 仓库</h2><p>建立名为 username.github.io 的储存库，username 是你在 GitHub 上的用户名，若之前已将 Hexo 上传至其他储存库，将该储存库重命名即可。<br>例如 username=joe，则 <a href="https://github.com/joe/joe.github.io">https://github.com/joe/joe.github.io</a></p><h2 id="hexo项目页面"><a href="#hexo项目页面" class="headerlink" title="hexo项目页面"></a>hexo项目页面</h2><ol><li>安装 hexo-deployer-git。</li><li>修改项目中_config.yml为如下：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;project&gt;</span> <span class="comment">#例如  https://github.com/joe/joe.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span> <span class="comment">#旧仓库默认master，新的默认是main</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>执行 hexo clean &amp;&amp; hexo deploy</li><li>访问 <a href="https://joe.github.io.github.io/">https://joe.github.io.github.io/</a> 是否正常</li></ol><p><strong><font color=red>注意问题</font></strong></p><ul><li>如果使用SSHKey部署则需要提前将hexo项目所在机器的SSHKEY.PUB 添加到 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 的 SSH keys 配置，<a href="https://blog.csdn.net/u013778905/article/details/83501204">参考地址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo-deploy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>事件的节流（throttle）与防抖（debounce）</title>
      <link href="2021/12/14/throttle-debounce/"/>
      <url>2021/12/14/throttle-debounce/</url>
      
        <content type="html"><![CDATA[<h2 id="“节流”与“防抖”的本质"><a href="#“节流”与“防抖”的本质" class="headerlink" title="“节流”与“防抖”的本质"></a>“节流”与“防抖”的本质</h2><p>这两个东西都以闭包的形式存在。</p><p>它们通过对事件对应的回调函数进行包裹、以自由变量的形式缓存时间信息，最后用 setTimeout 来控制事件的触发频率。</p><h3 id="Throttle：-第一个人说了算"><a href="#Throttle：-第一个人说了算" class="headerlink" title="Throttle： 第一个人说了算"></a>Throttle： 第一个人说了算</h3><p>throttle 的中心思想在于：在某段时间内，不管你触发了多少次回调，我都只认第一次，并在计时结束时给予响应。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fn是我们需要包装的事件回调, interval是时间间隔的阈值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, interval</span>) &#123;</span><br><span class="line">  <span class="comment">// last为上一次触发回调的时间</span></span><br><span class="line">  <span class="keyword">let</span> last = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将throttle处理结果当作函数返回</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 保留调用时的this上下文</span></span><br><span class="line">      <span class="keyword">let</span> context = <span class="variable language_">this</span></span><br><span class="line">      <span class="comment">// 保留调用时传入的参数</span></span><br><span class="line">      <span class="keyword">let</span> args = <span class="variable language_">arguments</span></span><br><span class="line">      <span class="comment">// 记录本次触发回调的时间</span></span><br><span class="line">      <span class="keyword">let</span> now = +<span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 判断上次触发的时间和本次触发的时间差是否小于时间间隔的阈值</span></span><br><span class="line">      <span class="keyword">if</span> (now - last &gt;= interval) &#123;</span><br><span class="line">      <span class="comment">// 如果时间间隔大于我们设定的时间间隔阈值，则执行回调</span></span><br><span class="line">          last = now;</span><br><span class="line">          fn.<span class="title function_">apply</span>(context, args);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用throttle来包装scroll的回调</span></span><br><span class="line"><span class="keyword">const</span> better_scroll = <span class="title function_">throttle</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发了滚动事件&#x27;</span>), <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, better_scroll)</span><br></pre></td></tr></table></figure><h3 id="Debounce：-最后一个人说了算"><a href="#Debounce：-最后一个人说了算" class="headerlink" title="Debounce： 最后一个人说了算"></a>Debounce： 最后一个人说了算</h3><p>防抖的中心思想在于：我会等你到底。在某段时间内，不管你触发了多少次回调，我都只认最后一次。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fn是我们需要包装的事件回调, delay是每次推迟执行的等待时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn, delay</span>) &#123;</span><br><span class="line">  <span class="comment">// 定时器</span></span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将debounce处理结果当作函数返回</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 保留调用时的this上下文</span></span><br><span class="line">    <span class="keyword">let</span> context = <span class="variable language_">this</span></span><br><span class="line">    <span class="comment">// 保留调用时传入的参数</span></span><br><span class="line">    <span class="keyword">let</span> args = <span class="variable language_">arguments</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每次事件被触发时，都去清除之前的旧定时器</span></span><br><span class="line">    <span class="keyword">if</span>(timer) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设立新定时器</span></span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(context, args)</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用debounce来包装scroll的回调</span></span><br><span class="line"><span class="keyword">const</span> better_scroll = <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发了滚动事件&#x27;</span>), <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, better_scroll)</span><br></pre></td></tr></table></figure><h3 id="用-Throttle-来优化-Debounce"><a href="#用-Throttle-来优化-Debounce" class="headerlink" title="用 Throttle 来优化 Debounce"></a>用 Throttle 来优化 Debounce</h3><p>debounce 的问题在于它“太有耐心了”。试想，如果用户的操作十分频繁——他每次都不等 debounce 设置的 delay 时间结束就进行下一次操作，于是每次 debounce 都为该用户重新生成定时器，回调函数被延迟了不计其数次。频繁的延迟会导致用户迟迟得不到响应，用户同样会产生“这个页面卡死了”的观感。</p><p>为了避免弄巧成拙，我们需要借力 throttle 的思想，打造一个“有底线”的 debounce——等你可以，但我有我的原则：delay 时间内，我可以为你重新生成定时器；但只要delay的时间到了，我必须要给用户一个响应。这个 throttle 与 debounce “合体”思路，已经被很多成熟的前端库应用到了它们的加强版 throttle 函数的实现中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fn是我们需要包装的事件回调, delay是时间间隔的阈值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, delay</span>) &#123;</span><br><span class="line">  <span class="comment">// last为上一次触发回调的时间, timer是定时器</span></span><br><span class="line">  <span class="keyword">let</span> last = <span class="number">0</span>, timer = <span class="literal">null</span></span><br><span class="line">  <span class="comment">// 将throttle处理结果当作函数返回</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123; </span><br><span class="line">    <span class="comment">// 保留调用时的this上下文</span></span><br><span class="line">    <span class="keyword">let</span> context = <span class="variable language_">this</span></span><br><span class="line">    <span class="comment">// 保留调用时传入的参数</span></span><br><span class="line">    <span class="keyword">let</span> args = <span class="variable language_">arguments</span></span><br><span class="line">    <span class="comment">// 记录本次触发回调的时间</span></span><br><span class="line">    <span class="keyword">let</span> now = +<span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 判断上次触发的时间和本次触发的时间差是否小于时间间隔的阈值</span></span><br><span class="line">    <span class="keyword">if</span> (now - last &lt; delay) &#123;</span><br><span class="line">    <span class="comment">// 如果时间间隔小于我们设定的时间间隔阈值，则为本次触发操作设立一个新的定时器</span></span><br><span class="line">       <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">       timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          last = now</span><br><span class="line">          fn.<span class="title function_">apply</span>(context, args)</span><br><span class="line">        &#125;, delay)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 建议清理定时器</span></span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        <span class="comment">// 如果时间间隔超出了我们设定的时间间隔阈值，那就不等了，无论如何要反馈给用户一次响应</span></span><br><span class="line">        last = now</span><br><span class="line">        fn.<span class="title function_">apply</span>(context, args)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用新的throttle包装scroll的回调</span></span><br><span class="line"><span class="keyword">const</span> better_scroll = <span class="title function_">throttle</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发了滚动事件&#x27;</span>), <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, better_scroll)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode Could not create temporary directory</title>
      <link href="2021/12/14/vscode-tips/"/>
      <url>2021/12/14/vscode-tips/</url>
      
        <content type="html"><![CDATA[<h2 id="vscode-右下角显示-vscode-Could-not-create-temporary-directory-权限被拒绝"><a href="#vscode-右下角显示-vscode-Could-not-create-temporary-directory-权限被拒绝" class="headerlink" title="vscode 右下角显示 vscode Could not create temporary directory: 权限被拒绝"></a>vscode 右下角显示 vscode Could not create temporary directory: 权限被拒绝</h2><p>处理方式，命令行环境执行一下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> <span class="variable">$USER</span> ~/Library/Caches/com.microsoft.VSCode.ShipIt/</span><br></pre></td></tr></table></figure><p>重新启动后，更新即可～</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 配置备份还原</title>
      <link href="2021/12/14/vscode-setting-backup/"/>
      <url>2021/12/14/vscode-setting-backup/</url>
      
        <content type="html"><![CDATA[<h2 id="VSCode-配置备份还原"><a href="#VSCode-配置备份还原" class="headerlink" title="VSCode 配置备份还原"></a>VSCode 配置备份还原</h2><ol><li>安装 settings sync 插件</li></ol><ol start="2"><li><p>安装成功重载后 ctrl + shift + p (win) 打开控制面板 </p><ul><li><p>需要输入一个 github token</p></li><li><p>这时候去到自己的github 的setting里面的developer settings  点击生成token，输入一个token 描述</p></li><li><p>选择gist 这项并提交 就会得到一串token 此token 每个人都不同 需自行保管 这里就不透露了</p></li><li><p>回到vs code 输入我们刚才得到的token后 vs code就会让我们输入一个gist id</p></li><li><p>这里输入我的gist id  XXXd471f9947d35a438ca27578404547e （这样可以得到我的vs code 插件和配置） vs code 将开始配置 并安装插件</p></li><li><p>过程中 如果不放心 就可以再次运行此命令</p></li></ul></li></ol><p><strong>过程中 需要耐心等待下</strong></p><p>当所有配置拉取成功了 会有日志输出<br>用户设置里面也会有一个我的基础模板</p><p>GitHub Token:       XXX597599670bb04027d6a850f84e9ec5feadc19<br>GitHub Gist: XXXcda5cac81481eb6d71f2b9d7255d80f<br>GitHub Gist Type: Secret</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卸载souretree后导致git flow无法使用</title>
      <link href="2021/12/14/sourcetree-error/"/>
      <url>2021/12/14/sourcetree-error/</url>
      
        <content type="html"><![CDATA[<h2 id="卸载souretree后导致git-flow无法使用"><a href="#卸载souretree后导致git-flow无法使用" class="headerlink" title="卸载souretree后导致git flow无法使用"></a>卸载souretree后导致git flow无法使用</h2><p>不知道大家又没试过一种场景，当我们卸载完 souretree 后， git flow 会一直报错，报错信息如下：</p><p>/Applications/Sourcetree.app/Contents/Resources/bin/getopt: No such file or directory flags:FATAL unable to parse provided options with getopt.</p><p>解决方案是执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> ~/.gitflow_export</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sourcetree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reflow（重排） &amp;&amp; repaint（重绘）</title>
      <link href="2021/12/14/reflow-repaint/"/>
      <url>2021/12/14/reflow-repaint/</url>
      
        <content type="html"><![CDATA[<h2 id="回流"><a href="#回流" class="headerlink" title="回流"></a>回流</h2><p>当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性（其他元素的几何属性和位置也会因此受到影响），然后再将计算的结果绘制出来。这个过程就是回流（也叫重排）。</p><h2 id="重绘"><a href="#重绘" class="headerlink" title="重绘"></a>重绘</h2><p>当我们对 DOM 的修改导致了样式的变化、却并未影响其几何属性（比如修改了颜色或背景色）时，浏览器不需重新计算元素的几何属性、直接为该元素绘制新的样式（跳过了上图所示的回流环节）。这个过程叫做重绘。</p><h2 id="导致回流或重绘的操作"><a href="#导致回流或重绘的操作" class="headerlink" title="导致回流或重绘的操作"></a>导致回流或重绘的操作</h2><p><strong>最“贵”的操作：改变 DOM 元素的几何属性</strong></p><p>常见的几何属性有 width、height、padding、margin、left、top、border 等等</p><p><strong>“价格适中”的操作：改变 DOM 树的结构</strong></p><p>主要指的是节点的增减、移动等操</p><p><strong>最容易被忽略的操作：获取一些特定属性的值</strong></p><p>涉及到即时计算的：offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight。同时getComputedStyle 和 currentStyle也会。 </p><h2 id="如何避免"><a href="#如何避免" class="headerlink" title="如何避免"></a>如何避免</h2><h3 id="用变量临时保存值"><a href="#用变量临时保存值" class="headerlink" title="用变量临时保存值"></a>用变量临时保存值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取el元素</span></span><br><span class="line"><span class="keyword">const</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;el&#x27;</span>)</span><br><span class="line"><span class="comment">// 这里循环判定比较简单，实际中或许会拓展出比较复杂的判定需求</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">    el.<span class="property">style</span>.<span class="property">top</span>  = el.<span class="property">offsetTop</span>  + <span class="number">10</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    el.<span class="property">style</span>.<span class="property">left</span> = el.<span class="property">offsetLeft</span> + <span class="number">10</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 缓存offsetLeft与offsetTop的值</span></span><br><span class="line"><span class="keyword">const</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;el&#x27;</span>) </span><br><span class="line"><span class="keyword">let</span> offLeft = el.<span class="property">offsetLeft</span>, offTop = el.<span class="property">offsetTop</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在JS层面进行计算</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">  offLeft += <span class="number">10</span></span><br><span class="line">  offTop  += <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一次性将计算结果应用到DOM上</span></span><br><span class="line">el.<span class="property">style</span>.<span class="property">left</span> = offLeft + <span class="string">&quot;px&quot;</span></span><br><span class="line">el.<span class="property">style</span>.<span class="property">top</span> = offTop  + <span class="string">&quot;px&quot;</span></span><br></pre></td></tr></table></figure><h3 id="避免逐条改变样式，使用类名去合并样式"><a href="#避免逐条改变样式，使用类名去合并样式" class="headerlink" title="避免逐条改变样式，使用类名去合并样式"></a>避免逐条改变样式，使用类名去合并样式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;container&#x27;</span>)</span><br><span class="line">container.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;100px&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&#x27;200px&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&#x27;10px solid red&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;container&#x27;</span>)</span><br><span class="line">  container.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;basic_style&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="将-DOM-“离线”"><a href="#将-DOM-“离线”" class="headerlink" title="将 DOM “离线”"></a>将 DOM “离线”</h3><p>我们上文所说的回流和重绘，都是在“该元素位于页面上”的前提下会发生的。一旦我们给元素设置 display: none，将其从页面上“拿掉”，那么我们的后续操作，将无法触发回流与重绘——这个将元素“拿掉”的操作，就叫做 DOM 离线化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;container&#x27;</span>)</span><br><span class="line">container.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;100px&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&#x27;200px&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&#x27;10px solid red&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;container&#x27;</span>)</span><br><span class="line">container.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;100px&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&#x27;200px&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&#x27;10px solid red&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">container.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Flush-队列：浏览器并没有那么简单"><a href="#Flush-队列：浏览器并没有那么简单" class="headerlink" title="Flush 队列：浏览器并没有那么简单"></a>Flush 队列：浏览器并没有那么简单</h2><p>现代浏览器是很聪明的。浏览器自己也清楚，如果每次 DOM 操作都即时地反馈一次回流或重绘，那么性能上来说是扛不住的。于是它自己缓存了一个 flush 队列，把我们触发的回流与重绘任务都塞进去，待到队列里的任务多起来、或者达到了一定的时间间隔，或者“不得已”的时候，再将这些任务一口气出队。因此我们看到，上面就算我们进行了 4 次 DOM 更改，也只触发了一次 Layout 和一次 Paint。</p><p>虽然现代浏览器进行了优化处理，但为了那些不聪明的浏览器（说的就是你了IE）,手动优化还是 很有必要的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒计时-vue</title>
      <link href="2021/12/14/countdown/"/>
      <url>2021/12/14/countdown/</url>
      
        <content type="html"><![CDATA[<h2 id="vue-版本-倒计时"><a href="#vue-版本-倒计时" class="headerlink" title="vue 版本 倒计时"></a>vue 版本 倒计时</h2><p>实现一个简单版本的倒计时，采用vue的计算属性和定时器实现，清理定时器(很重要，很重要，很重要！)不然会挂掉的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>距离&#123;&#123;lastTime&#125;&#125;剩余<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;h.split(&#x27;&#x27;)[0]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;h.split(&#x27;&#x27;)[1]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>时</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;m.split(&#x27;&#x27;)[0]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;m.split(&#x27;&#x27;)[1]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>分</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;s.split(&#x27;&#x27;)[0]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;s.split(&#x27;&#x27;)[1]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>秒</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;ms.split(&#x27;&#x27;)[0]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;ms.split(&#x27;&#x27;)[1]&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>毫秒</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleStart&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleEnd&quot;</span>&gt;</span>结束<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;CountDown&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  data () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">timer</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">lastTime</span>: <span class="string">&#x27;2019-11-05 17:47:40&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">rang</span>: <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  beforeDestroy () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="title function_">clearTimer</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  mounted () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="title function_">handleStart</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    addZero (val) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> (val &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + val;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    clearTimer () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">timer</span> &amp;&amp; <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    handleStart () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">timer</span> !== <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> rang = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="variable language_">this</span>.<span class="property">lastTime</span>).<span class="title function_">getTime</span>() - <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (rang &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="title function_">clearTimer</span>();</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&#x27;到达时间！&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">rang</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(rang);</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">10</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    handleEnd () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">clearTimer</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    h () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">rang</span> ? <span class="variable language_">this</span>.<span class="title function_">addZero</span>(<span class="variable language_">this</span>.<span class="property">rang</span>.<span class="title function_">getTime</span>() / (<span class="number">3600</span> * <span class="number">1000</span>)) : <span class="string">&#x27;00&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    m () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">rang</span> ? <span class="variable language_">this</span>.<span class="title function_">addZero</span>(<span class="variable language_">this</span>.<span class="property">rang</span>.<span class="title function_">getMinutes</span>()) : <span class="string">&#x27;00&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    s () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">rang</span> ? <span class="variable language_">this</span>.<span class="title function_">addZero</span>(<span class="variable language_">this</span>.<span class="property">rang</span>.<span class="title function_">getSeconds</span>()) : <span class="string">&#x27;00&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    ms () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">rang</span></span></span><br><span class="line"><span class="language-javascript">        ? <span class="variable language_">this</span>.<span class="title function_">addZero</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="variable language_">this</span>.<span class="property">rang</span>.<span class="title function_">getMilliseconds</span>() / <span class="number">10</span>))</span></span><br><span class="line"><span class="language-javascript">        : <span class="string">&#x27;00&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端换肤方案</title>
      <link href="2021/05/27/front-end-skin/"/>
      <url>2021/05/27/front-end-skin/</url>
      
        <content type="html"><![CDATA[<h2 id="通过webpack插件实现换肤"><a href="#通过webpack插件实现换肤" class="headerlink" title="通过webpack插件实现换肤"></a>通过webpack插件实现换肤</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D webpack-theme-color-replacer</span><br></pre></td></tr></table></figure><h3 id="修改配置文件-vue-config-js"><a href="#修改配置文件-vue-config-js" class="headerlink" title="修改配置文件 vue.config.js"></a>修改配置文件 vue.config.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">configureWebpack</span>: &#123;</span><br><span class="line">   <span class="attr">plugins</span>: [</span><br><span class="line">     <span class="keyword">new</span> <span class="title class_">ThemeColorReplacer</span>(&#123;</span><br><span class="line">       <span class="attr">fileName</span>: <span class="string">&#x27;css/theme-colors-[contenthash:8].css&#x27;</span>,</span><br><span class="line">       <span class="attr">matchColors</span>: colorUtil.<span class="title function_">getElementUISeries</span>(<span class="string">&#x27;#2d8cf0&#x27;</span>), <span class="comment">// 主色系列</span></span><br><span class="line">       <span class="comment">// 改变样式选择器，解决样式覆盖问题</span></span><br><span class="line">       <span class="title function_">changeSelector</span>(<span class="params">selector</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> selector</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">   ]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="改变主题按钮"><a href="#改变主题按钮" class="headerlink" title="改变主题按钮"></a>改变主题按钮</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ColorPicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">class</span>=<span class="string">&quot;change-theme&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;primaryColor&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">input</span>=<span class="string">&quot;changeThemeColor&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> client <span class="keyword">from</span> <span class="string">&#x27;webpack-theme-color-replacer/client&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> colorUtil <span class="keyword">from</span> <span class="string">&#x27;webpack-theme-color-replacer/forElementUI&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">primaryColor</span>: <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;theme_color&#x27;</span>) || <span class="string">&#x27;#2d8cf0&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">changeThemeColor</span>(<span class="variable language_">this</span>.<span class="property">primaryColor</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">changeThemeColor</span>(<span class="params">primaryColor</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> options = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">matchColors</span>: [primaryColor],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">newColors</span>: colorUtil.<span class="title function_">getElementUISeries</span>(primaryColor),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">changeUrl</span>(<span class="params">cssUrl</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 当路由不是hash模式的时候，资源的绝对路径，如果有二级目录，则编写二级目录</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> <span class="string">`/<span class="subst">$&#123;cssUrl&#125;</span>`</span>; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      client.<span class="property">changer</span>.<span class="title function_">changeColor</span>(options, <span class="title class_">Promise</span>).<span class="title function_">then</span>(<span class="function"><span class="params">t</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;theme_color&#x27;</span>, primaryColor);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.change-theme</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  /deep/ <span class="selector-class">.ivu-color-picker-input</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">34px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-color</span>: transparent;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding-right</span>: <span class="number">8px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin-right</span>: <span class="number">4px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  /deep/ <span class="selector-class">.ivu-icon-ios-arrow-down</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>二叉树遍历（前序，中序，后序）</title>
      <link href="2021/05/11/binary-tree-traversal/"/>
      <url>2021/05/11/binary-tree-traversal/</url>
      
        <content type="html"><![CDATA[<h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p>二叉树（Binary tree）是树形结构的一个重要类型。许多实际问题抽象出来的数据结构往往是二叉树形式，即使是一般的树也能简单地转换为二叉树，而且二叉树的存储结构及其算法都较为简单，因此二叉树显得特别重要。二叉树特点是每个结点最多只能有两棵子树，且有左右之分</p><h2 id="区分前序，中序，后序"><a href="#区分前序，中序，后序" class="headerlink" title="区分前序，中序，后序"></a>区分前序，中序，后序</h2><p>在这三种顺序中，根结点的遍历分别被安排在了首要位置、中间位置和最后位置。所谓的“先序”、“中序”和“后序”，“先”、“中”、“后”其实就是指根结点的遍历时机。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="树结构"><a href="#树结构" class="headerlink" title="树结构"></a>树结构</h3><p><img src="tree-struct.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> root = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">  <span class="attr">left</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="string">&quot;B&quot;</span>,</span><br><span class="line">    <span class="attr">left</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="string">&quot;D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="string">&quot;E&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">right</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="string">&quot;F&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="前序遍历"><a href="#前序遍历" class="headerlink" title="前序遍历"></a>前序遍历</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">preorder</span>(<span class="params">node</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!node) &#123;</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前遍历的结点值是&#x27;</span>, node.<span class="property">val</span>);</span><br><span class="line">    <span class="title function_">preorder</span>(node.<span class="property">left</span>);</span><br><span class="line">    <span class="title function_">preorder</span>(node.<span class="property">right</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">preorder</span>(root);</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----控制台输出结果-----</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 A</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 B</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 D</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 E</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 C</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 F</span></span><br></pre></td></tr></table></figure><h3 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">inOrder</span>(<span class="params">node</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (!node) &#123;</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">inOrder</span>(node.<span class="property">left</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前遍历的结点值是&#x27;</span>, node.<span class="property">val</span>);</span><br><span class="line">    <span class="title function_">inOrder</span>(node.<span class="property">right</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">inOrder</span>(root);</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----控制台输出结果-----</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 D</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 B</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 E</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 A</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 C</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 F</span></span><br></pre></td></tr></table></figure><h3 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">postOrder</span>(<span class="params">node</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (!node) &#123;</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">postOrder</span>(node.<span class="property">left</span>);</span><br><span class="line">    <span class="title function_">postOrder</span>(node.<span class="property">right</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前遍历的结点值是&#x27;</span>, node.<span class="property">val</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">postOrder</span>(root);</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----控制台输出结果-----</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 D</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 E</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 B</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 F</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 C</span></span><br><span class="line"><span class="comment">// 当前遍历的结点值是 A</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二叉树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用覆盖率标签查找未使用的JavaScript和CSS</title>
      <link href="2021/04/28/find-unused-javaScript-and-css-with-the-coverage/"/>
      <url>2021/04/28/find-unused-javaScript-and-css-with-the-coverage/</url>
      
        <content type="html"><![CDATA[<p>通常可以使用chrome-devtool查看当前网站使用的css和js的使用情况，就是查看冗余代码</p><ol><li>打开devtool</li><li>右上角竖向三个点 -&gt; More tools -&gt; coverage -&gt; 点击reload图标<br><img src="coverage.png" alt=""></li><li>页面自动刷新，查看结果如下：<br>概览列表<br><img src="coverage-list.png" alt=""><br>单个文件详情<br><img src="coverage-detail.png" alt=""></li></ol>]]></content>
      
      
      <categories>
          
          <category> chrome-devtool </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>chrome 开发工具内置变量</title>
      <link href="2021/04/28/chrome-devtool-console-variable/"/>
      <url>2021/04/28/chrome-devtool-console-variable/</url>
      
        <content type="html"><![CDATA[<p>chorme devtool 本身也有不少内置变量，今天我们看下哪些变量在平常中使用</p><h2 id=""><a href="#" class="headerlink" title="$_"></a>$_</h2><ul><li>英文解释 returns the value of the most recently evaluated expression.</li><li>中文解释 返回最近求值的表达式的值。</li></ul><p><img src="$_.png" alt=""></p><h2 id="0-4"><a href="#0-4" class="headerlink" title="$0 - $4"></a>$0 - $4</h2><ul><li>英文解释 The $0, $1, $2, $3 and $4 commands work as a historical reference to the last five DOM elements inspected within the Elements panel or the last five JavaScript heap objects selected in the Profiles panel.$0 returns the most recently selected element or JavaScript object, $1 returns the second most recently selected one, and so on.</li><li>中文解释 $0，$1，$2，$3 和 $4 命令用作对在Elements面板中检查的最后五个DOM元素或在Profiles面板中选择的最后五个JavaScript堆对象的历史参考。$0 返回最近选择的元素或JavaScript对象，$1 返回第二个最近选择的元素，依此类推</li></ul><p><img src="$1.png" alt=""></p><h2 id="selector-startNode"><a href="#selector-startNode" class="headerlink" title="$(selector, [startNode])"></a>$(selector, [startNode])</h2><ul><li>英文解释 this function is an alias for the document.querySelector() function.</li><li>中文解释 document.querySelector 函数别名</li></ul><p><img src="$().png" alt=""></p><h2 id="selector-startNode-1"><a href="#selector-startNode-1" class="headerlink" title="$$(selector, [startNode])"></a>$$(selector, [startNode])</h2><ul><li>英文解释 $$(selector) returns an array of elements that match the given CSS selector. This command is equivalent to calling document.querySelectorAll().</li><li>中文解释 document.querySelectorAll 函数别名</li></ul><p><img src="$$().png" alt=""></p><h2 id="x-path-startNode"><a href="#x-path-startNode" class="headerlink" title="$x(path, [startNode])"></a>$x(path, [startNode])</h2><ul><li><p>英文解释 $x(path) returns an array of DOM elements that match the given XPath expression.</p></li><li><p>中文解释 $x(path) 返回与给定XPath表达式匹配的DOM元素数组。</p><p>例如 $(“//p”) 返回所有的p元素，$(“//p[a]”) 返回所有包含a元素的p元素<br><img src="$x.png" alt=""></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端动态设置html的font-size</title>
      <link href="2021/04/22/css-rem-vw/"/>
      <url>2021/04/22/css-rem-vw/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于移动端的终端例如手机有各种各种的分辨率，导致一套设计稿要适应多种屏幕。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li><p>不考虑兼容性的话直接vw处理</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">calc</span>(<span class="number">100vw</span> / <span class="number">7.5</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里解释一下代码“100vw”等于屏幕的宽度。相当于把屏幕分成了100份，每份是1vw。至于7.5的原因为是我们想得到1rem = 100px。那么按照设计稿是750px来说 1rem = 100px = 750px/7.5。这样我们就得到了设计稿为750px同时html的fontSize=100px的场景。然后设计稿里面的所有数值 XXXpx = XXX/100 rem，用于方便我们的运算</p></li><li><p>js动态计算出font-size</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params">doc, win</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> docEl = doc.<span class="property">documentElement</span>;</span><br><span class="line">  <span class="keyword">let</span> resizeEvt = <span class="string">&#x27;orientationchange&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span> ? <span class="string">&#x27;orientationchange&#x27;</span> : <span class="string">&#x27;resize&#x27;</span>;</span><br><span class="line">  <span class="keyword">let</span> recalc = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> clientWidth = docEl.<span class="property">clientWidth</span>;</span><br><span class="line">    <span class="keyword">if</span> (!clientWidth) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 超过750按100px算</span></span><br><span class="line">    <span class="keyword">if</span> (clientWidth &gt;= <span class="number">750</span>) &#123;</span><br><span class="line">      docEl.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;100px&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      docEl.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="number">100</span> * (clientWidth / <span class="number">750</span>) + <span class="string">&#x27;px&#x27;</span>; </span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      计算出相对于750对于基础值100的换算比例。</span></span><br><span class="line"><span class="comment">      举个栗子，iphone6 clientWidth = 375，则结果是 375/750=0.5,0.5 *100 =50。说明了整体缩放了50%.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (!doc.<span class="property">addEventListener</span>) <span class="keyword">return</span>;</span><br><span class="line">  win.<span class="title function_">addEventListener</span>(resizeEvt, recalc, <span class="literal">false</span>);</span><br><span class="line">  doc.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, recalc, <span class="literal">false</span>);</span><br><span class="line">&#125;)(<span class="variable language_">document</span>, <span class="variable language_">window</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>csscomb-preset</title>
      <link href="2021/04/20/csscomb-preset/"/>
      <url>2021/04/20/csscomb-preset/</url>
      
        <content type="html"><![CDATA[<p>css格式化神奇，主要格式化css属性顺序，一份配置，到处使用。</p><p>废话不说，直接上csscomb-preset 配置 <a href="https://github.com/GentleHwang/csscomb-config-custom/blob/master/.csscomb.json">参考地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">       <span class="string">&quot;always-semicolon&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">       <span class="string">&quot;block-indent&quot;</span>: <span class="string">&quot;  &quot;</span>,</span><br><span class="line">       <span class="string">&quot;color-case&quot;</span>: <span class="string">&quot;lower&quot;</span>,</span><br><span class="line">       <span class="string">&quot;color-shorthand&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">       <span class="string">&quot;element-case&quot;</span>: <span class="string">&quot;lower&quot;</span>,</span><br><span class="line">       <span class="string">&quot;leading-zero&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">       <span class="string">&quot;quotes&quot;</span>: <span class="string">&quot;single&quot;</span>,</span><br><span class="line">       <span class="string">&quot;sort-order-fallback&quot;</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-after-colon&quot;</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-after-combinator&quot;</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-after-opening-brace&quot;</span>: <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-after-selector-delimiter&quot;</span>: <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-before-closing-brace&quot;</span>: <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-before-colon&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-before-combinator&quot;</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-before-opening-brace&quot;</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-before-selector-delimiter&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">       <span class="string">&quot;space-between-declarations&quot;</span>: <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">       <span class="string">&quot;strip-spaces&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">       <span class="string">&quot;tab-size&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">       <span class="string">&quot;unitless-zero&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">       <span class="string">&quot;vendor-prefix-align&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">       <span class="string">&quot;sort-order&quot;</span>: [</span><br><span class="line">           [</span><br><span class="line">               <span class="string">&quot;position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;top&quot;</span>,</span><br><span class="line">               <span class="string">&quot;right&quot;</span>,</span><br><span class="line">               <span class="string">&quot;bottom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;left&quot;</span>,</span><br><span class="line">               <span class="string">&quot;z-index&quot;</span>,</span><br><span class="line">               <span class="string">&quot;display&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex-basis&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex-direction&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex-flow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex-grow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex-shrink&quot;</span>,</span><br><span class="line">               <span class="string">&quot;flex-wrap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;align-content&quot;</span>,</span><br><span class="line">               <span class="string">&quot;align-items&quot;</span>,</span><br><span class="line">               <span class="string">&quot;align-self&quot;</span>,</span><br><span class="line">               <span class="string">&quot;justify-content&quot;</span>,</span><br><span class="line">               <span class="string">&quot;justify-items&quot;</span>,</span><br><span class="line">               <span class="string">&quot;justify-self&quot;</span>,</span><br><span class="line">               <span class="string">&quot;order&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-area&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-auto-rows&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-auto-columns&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-auto-flow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-gap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-row&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-row-start&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-row-end&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-row-gap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-column&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-column-start&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-column-end&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-column-gap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-template&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-template-areas&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-template-rows&quot;</span>,</span><br><span class="line">               <span class="string">&quot;grid-template-columns&quot;</span>,</span><br><span class="line">               <span class="string">&quot;gap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;float&quot;</span>,</span><br><span class="line">               <span class="string">&quot;clear&quot;</span>,</span><br><span class="line">               <span class="string">&quot;box-sizing&quot;</span>,</span><br><span class="line">               <span class="string">&quot;width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;min-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;max-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;height&quot;</span>,</span><br><span class="line">               <span class="string">&quot;min-height&quot;</span>,</span><br><span class="line">               <span class="string">&quot;max-height&quot;</span>,</span><br><span class="line">               <span class="string">&quot;margin&quot;</span>,</span><br><span class="line">               <span class="string">&quot;margin-top&quot;</span>,</span><br><span class="line">               <span class="string">&quot;margin-right&quot;</span>,</span><br><span class="line">               <span class="string">&quot;margin-bottom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;margin-left&quot;</span>,</span><br><span class="line">               <span class="string">&quot;padding&quot;</span>,</span><br><span class="line">               <span class="string">&quot;padding-top&quot;</span>,</span><br><span class="line">               <span class="string">&quot;padding-right&quot;</span>,</span><br><span class="line">               <span class="string">&quot;padding-bottom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;padding-left&quot;</span>,</span><br><span class="line">               <span class="string">&quot;object-fit&quot;</span>,</span><br><span class="line">               <span class="string">&quot;object-position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;overflow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;overflow-x&quot;</span>,</span><br><span class="line">               <span class="string">&quot;overflow-y&quot;</span>,</span><br><span class="line">               <span class="string">&quot;outline&quot;</span>,</span><br><span class="line">               <span class="string">&quot;outline-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;outline-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;outline-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;outline-offset&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-spacing&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-collapse&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-top&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-top-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-top-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-top-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-right&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-right-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-right-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-right-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-bottom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-bottom-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-bottom-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-bottom-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-left&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-left-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-left-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-left-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-radius&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-top-left-radius&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-top-right-radius&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-bottom-right-radius&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-bottom-left-radius&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-image&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-image-source&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-image-slice&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-image-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-image-outset&quot;</span>,</span><br><span class="line">               <span class="string">&quot;border-image-repeat&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-image&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-attachment&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-blend-mode&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-position-x&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-position-y&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-clip&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-origin&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-size&quot;</span>,</span><br><span class="line">               <span class="string">&quot;background-repeat&quot;</span>,</span><br><span class="line">               <span class="string">&quot;box-decoration-break&quot;</span>,</span><br><span class="line">               <span class="string">&quot;box-shadow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;table-layout&quot;</span>,</span><br><span class="line">               <span class="string">&quot;caption-side&quot;</span>,</span><br><span class="line">               <span class="string">&quot;empty-cells&quot;</span>,</span><br><span class="line">               <span class="string">&quot;list-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;list-style-position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;list-style-type&quot;</span>,</span><br><span class="line">               <span class="string">&quot;list-style-image&quot;</span>,</span><br><span class="line">               <span class="string">&quot;quotes&quot;</span>,</span><br><span class="line">               <span class="string">&quot;touch-action&quot;</span>,</span><br><span class="line">               <span class="string">&quot;will-change&quot;</span>,</span><br><span class="line">               <span class="string">&quot;appearance&quot;</span>,</span><br><span class="line">               <span class="string">&quot;clip&quot;</span>,</span><br><span class="line">               <span class="string">&quot;clip-path&quot;</span>,</span><br><span class="line">               <span class="string">&quot;content&quot;</span>,</span><br><span class="line">               <span class="string">&quot;counter-increment&quot;</span>,</span><br><span class="line">               <span class="string">&quot;counter-reset&quot;</span>,</span><br><span class="line">               <span class="string">&quot;vertical-align&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-align&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-align-last&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-decoration&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-decoration-line&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-decoration-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-decoration-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-decoration-skip&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-underline-position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-shadow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-emphasis&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-emphasis-position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-emphasis-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-emphasis-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-indent&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-justify&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-outline&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-transform&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-wrap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-overflow&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-overflow-ellipsis&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-overflow-mode&quot;</span>,</span><br><span class="line">               <span class="string">&quot;text-orientation&quot;</span>,</span><br><span class="line">               <span class="string">&quot;white-space&quot;</span>,</span><br><span class="line">               <span class="string">&quot;word-spacing&quot;</span>,</span><br><span class="line">               <span class="string">&quot;word-wrap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;word-break&quot;</span>,</span><br><span class="line">               <span class="string">&quot;overflow-wrap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;tab-size&quot;</span>,</span><br><span class="line">               <span class="string">&quot;hyphens&quot;</span>,</span><br><span class="line">               <span class="string">&quot;letter-spacing&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-weight&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-variant&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-size-adjust&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-stretch&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-effect&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-emphasize&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-emphasize-position&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-emphasize-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-smooth&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-size&quot;</span>,</span><br><span class="line">               <span class="string">&quot;font-family&quot;</span>,</span><br><span class="line">               <span class="string">&quot;line-height&quot;</span>,</span><br><span class="line">               <span class="string">&quot;opacity&quot;</span>,</span><br><span class="line">               <span class="string">&quot;filter&quot;</span>,</span><br><span class="line">               <span class="string">&quot;isolation&quot;</span>,</span><br><span class="line">               <span class="string">&quot;backdrop-filter&quot;</span>,</span><br><span class="line">               <span class="string">&quot;mix-blend-mode&quot;</span>,</span><br><span class="line">               <span class="string">&quot;resize&quot;</span>,</span><br><span class="line">               <span class="string">&quot;cursor&quot;</span>,</span><br><span class="line">               <span class="string">&quot;user-select&quot;</span>,</span><br><span class="line">               <span class="string">&quot;nav-index&quot;</span>,</span><br><span class="line">               <span class="string">&quot;nav-up&quot;</span>,</span><br><span class="line">               <span class="string">&quot;nav-right&quot;</span>,</span><br><span class="line">               <span class="string">&quot;nav-down&quot;</span>,</span><br><span class="line">               <span class="string">&quot;nav-left&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transition&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transition-delay&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transition-timing-function&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transition-duration&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transition-property&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transform&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transform-origin&quot;</span>,</span><br><span class="line">               <span class="string">&quot;transform-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;backface-visibility&quot;</span>,</span><br><span class="line">               <span class="string">&quot;perspective&quot;</span>,</span><br><span class="line">               <span class="string">&quot;perspective-origin&quot;</span>,</span><br><span class="line">               <span class="string">&quot;visibility&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-name&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-duration&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-play-state&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-timing-function&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-delay&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-iteration-count&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-direction&quot;</span>,</span><br><span class="line">               <span class="string">&quot;animation-fill-mode&quot;</span>,</span><br><span class="line">               <span class="string">&quot;pointer-events&quot;</span>,</span><br><span class="line">               <span class="string">&quot;direction&quot;</span>,</span><br><span class="line">               <span class="string">&quot;unicode-bidi&quot;</span>,</span><br><span class="line">               <span class="string">&quot;writing-mode&quot;</span>,</span><br><span class="line">               <span class="string">&quot;columns&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-span&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-count&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-fill&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-gap&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-rule&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-rule-width&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-rule-style&quot;</span>,</span><br><span class="line">               <span class="string">&quot;column-rule-color&quot;</span>,</span><br><span class="line">               <span class="string">&quot;break-before&quot;</span>,</span><br><span class="line">               <span class="string">&quot;break-inside&quot;</span>,</span><br><span class="line">               <span class="string">&quot;break-after&quot;</span>,</span><br><span class="line">               <span class="string">&quot;page&quot;</span>,</span><br><span class="line">               <span class="string">&quot;page-break-before&quot;</span>,</span><br><span class="line">               <span class="string">&quot;page-break-inside&quot;</span>,</span><br><span class="line">               <span class="string">&quot;page-break-after&quot;</span>,</span><br><span class="line">               <span class="string">&quot;src&quot;</span>,</span><br><span class="line">               <span class="string">&quot;orphans&quot;</span>,</span><br><span class="line">               <span class="string">&quot;widows&quot;</span>,</span><br><span class="line">               <span class="string">&quot;zoom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;min-zoom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;max-zoom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;user-zoom&quot;</span>,</span><br><span class="line">               <span class="string">&quot;fill&quot;</span>,</span><br><span class="line">               <span class="string">&quot;fill-rule&quot;</span>,</span><br><span class="line">               <span class="string">&quot;clip-rule&quot;</span>,</span><br><span class="line">               <span class="string">&quot;stroke&quot;</span></span><br><span class="line">           ]</span><br><span class="line">       ]</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端自动化工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信sdk封装调用(适配andriod，IOS)</title>
      <link href="2021/02/25/wechat-sdk/"/>
      <url>2021/02/25/wechat-sdk/</url>
      
        <content type="html"><![CDATA[<h2 id="微信分享sdk调用"><a href="#微信分享sdk调用" class="headerlink" title="微信分享sdk调用"></a>微信分享sdk调用</h2><p>微信sdk调用参考官网文档就够了，不过有些坑点必须说下，针对SPA的app。</p><ul><li>安卓必须每次url变化的时候签名</li><li>IOS只能在落地页签名，落地页指的是第一次进入app的url。以后切换路由的时候不需要，也不能重新签名。</li><li>当前页面只能签名一次，多次签名也是不行的。</li></ul><p>SDK 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * desc: 微信新jssdk</span></span><br><span class="line"><span class="comment"> * author: Joe</span></span><br><span class="line"><span class="comment"> * date: 2021-02-24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> jsApiList = [</span><br><span class="line">  <span class="string">&#x27;onMenuShareAppMessage&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;onMenuShareTimeline&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;updateAppMessageShareData&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;updateTimelineShareData&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;openLocation&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;getLocation&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;chooseImage&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;uploadImage&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// ready 包装</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">withReady</span> = func =&gt; <span class="keyword">async</span> (...args) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> isReady = <span class="keyword">await</span> <span class="title function_">ready</span>();</span><br><span class="line">  <span class="keyword">if</span> (isReady) &#123;</span><br><span class="line">    func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title class_">Toast</span>(<span class="string">&#x27;微信配置异常&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// wx.ready</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">ready</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (instance !== <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="comment">// 已存在ready实例，直接返回对象</span></span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建ready实例</span></span><br><span class="line">  instance = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">async</span> <span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当前签名url</span></span><br><span class="line">    <span class="keyword">const</span> url = location.<span class="property">href</span>;</span><br><span class="line">    <span class="comment">// 根据当前url请求后端获取签名</span></span><br><span class="line">    <span class="keyword">let</span> &#123; success, data, msg &#125; = <span class="keyword">await</span> <span class="title function_">getSign</span>(&#123;</span><br><span class="line">      <span class="string">&#x27;jsUrl&#x27;</span>: url</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">      wx.<span class="title function_">config</span>(&#123;</span><br><span class="line">        <span class="attr">debug</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">jsApiList</span>: jsApiList, <span class="comment">// 必填，需要使用的JS接口列表</span></span><br><span class="line">        ...data</span><br><span class="line">      &#125;);</span><br><span class="line">      wx.<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      wx.<span class="title function_">error</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wx.error,&#x27;</span>, res);</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="literal">false</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="literal">false</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;通过后端获取微信前面接口异常,&#x27;</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> instance;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resetReady</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (device.<span class="property">isAndroid</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Android 重置ready&#x27;</span>);</span><br><span class="line">    instance = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取定位</span></span><br><span class="line"><span class="keyword">const</span> getLocation = <span class="title function_">withReady</span>(<span class="keyword">async</span> (data) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; success, fail, complete, cancel, showLoading = <span class="literal">true</span> &#125; = data;</span><br><span class="line">  <span class="comment">// 默认展开loading效果</span></span><br><span class="line">  showLoading &amp;&amp; <span class="title class_">Toast</span>.<span class="title function_">loading</span>(&#123;</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">0</span>, <span class="comment">// 持续展示 toast</span></span><br><span class="line">    <span class="attr">forbidClick</span>: <span class="literal">true</span>, <span class="comment">// 禁用背景点击</span></span><br><span class="line">    <span class="attr">loadingType</span>: <span class="string">&#x27;spinner&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;正在获取定位&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 非打包环境直接返回结果</span></span><br><span class="line">  <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">success</span>(&#123;</span><br><span class="line">        <span class="attr">latitude</span>: <span class="number">22.51595</span>,</span><br><span class="line">        <span class="attr">longitude</span>: <span class="number">113.3926</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="title function_">complete</span>();</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">    showLoading &amp;&amp; <span class="title class_">Toast</span>.<span class="title function_">clear</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  wx.<span class="title function_">getLocation</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;gcj02&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wx.getLocation success&#x27;</span>, res);</span><br><span class="line">      success &amp;&amp; <span class="title function_">success</span>(res);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">fail</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wx.getLocation fail&#x27;</span>, error);</span><br><span class="line">      fail &amp;&amp; <span class="title function_">fail</span>(error);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">complete</span>(<span class="params"></span>) &#123;</span><br><span class="line">      showLoading &amp;&amp; <span class="title class_">Toast</span>.<span class="title function_">clear</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wx.getLocation complete&#x27;</span>);</span><br><span class="line">      complete &amp;&amp; <span class="title function_">complete</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">cancel</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wx.getLocation cancel&#x27;</span>);</span><br><span class="line">      cancel &amp;&amp; <span class="title function_">cancel</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传图片</span></span><br><span class="line"><span class="keyword">const</span> uploadImage = <span class="title function_">withReady</span>(<span class="keyword">async</span> callback =&gt; &#123;</span><br><span class="line">  wx.<span class="title function_">chooseImage</span>(&#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">1</span>, <span class="comment">// 默认9</span></span><br><span class="line">    <span class="attr">sizeType</span>: [<span class="string">&#x27;original&#x27;</span>, <span class="string">&#x27;compressed&#x27;</span>],</span><br><span class="line">    <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>], </span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> localIds = res.<span class="property">localIds</span>; </span><br><span class="line">      wx.<span class="title function_">uploadImage</span>(&#123;</span><br><span class="line">        <span class="attr">localId</span>: localIds[<span class="number">0</span>], </span><br><span class="line">        <span class="attr">isShowProgressTips</span>: <span class="number">1</span>, </span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> json = &#123;&#125;;</span><br><span class="line">          <span class="keyword">var</span> serverId = res.<span class="property">serverId</span>; </span><br><span class="line">          json[<span class="string">&#x27;serverId&#x27;</span>] = serverId;</span><br><span class="line">          json[<span class="string">&#x27;url&#x27;</span>] = localIds[<span class="number">0</span>];</span><br><span class="line">          <span class="title function_">callback</span>(json);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开定位</span></span><br><span class="line"><span class="keyword">const</span> openLocation = <span class="title function_">withReady</span>(<span class="keyword">async</span> data =&gt; &#123;</span><br><span class="line">  wx.<span class="title function_">openLocation</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> share = <span class="title function_">withReady</span>(<span class="keyword">async</span> (data = &#123;&#125;) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    title = <span class="string">&#x27;摩萄盒子&#x27;</span>,</span><br><span class="line">    desc = <span class="string">&#x27;专业无人葡萄酒销售&#x27;</span>,</span><br><span class="line">    link = location.<span class="property">href</span>,</span><br><span class="line">    imgUrl = <span class="string">&#x27;https://sili-static.oss-cn-shenzhen.aliyuncs.com/icon_h5_share.png&#x27;</span>,</span><br><span class="line">    success,</span><br><span class="line">    cancel</span><br><span class="line">  &#125; = data;</span><br><span class="line">  <span class="keyword">let</span> shareFriend = wx.<span class="property">updateAppMessageShareData</span> || wx.<span class="property">onMenuShareAppMessage</span>;</span><br><span class="line">  <span class="keyword">let</span> shareTime = wx.<span class="property">updateTimelineShareData</span> || wx.<span class="property">onMenuShareTimeline</span>;</span><br><span class="line">  <span class="keyword">let</span> params = &#123;</span><br><span class="line">    <span class="attr">title</span>: title, <span class="comment">// 分享标题</span></span><br><span class="line">    <span class="attr">desc</span>: desc, <span class="comment">// 分享描述</span></span><br><span class="line">    <span class="attr">link</span>: link, <span class="comment">// 分享链接 默认以当前链接</span></span><br><span class="line">    <span class="attr">imgUrl</span>: imgUrl, <span class="comment">// 分享图标</span></span><br><span class="line">    <span class="title function_">success</span>(<span class="params"></span>) &#123;</span><br><span class="line">      success &amp;&amp; <span class="title function_">success</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">cancel</span>(<span class="params"></span>) &#123;</span><br><span class="line">      cancel &amp;&amp; <span class="title function_">cancel</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 分享给朋友</span></span><br><span class="line">  <span class="title function_">shareFriend</span>(params);</span><br><span class="line">  <span class="comment">// 分享到朋友圈</span></span><br><span class="line">  <span class="title function_">shareTime</span>(params);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">pay</span> = (<span class="params">&#123; signParams, success, fail &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">onBridgeReady</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">WeixinJSBridge</span>.<span class="title function_">invoke</span>(</span><br><span class="line">      <span class="string">&#x27;getBrandWCPayRequest&#x27;</span>, signParams,</span><br><span class="line">      <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">err_msg</span> === <span class="string">&#x27;get_brand_wcpay_request:ok&#x27;</span>) &#123;</span><br><span class="line">          success &amp;&amp; <span class="title function_">success</span>(res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          res.<span class="property">msg</span> = <span class="string">&#x27;支付失败&#x27;</span>;</span><br><span class="line">          fail &amp;&amp; <span class="title function_">fail</span>(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">WeixinJSBridge</span> === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;WeixinJSBridgeReady&#x27;</span>, onBridgeReady, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">attachEvent</span>) &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">attachEvent</span>(<span class="string">&#x27;WeixinJSBridgeReady&#x27;</span>, onBridgeReady);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">attachEvent</span>(<span class="string">&#x27;onWeixinJSBridgeReady&#x27;</span>, onBridgeReady);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">onBridgeReady</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  share,</span><br><span class="line">  pay,</span><br><span class="line">  getLocation,</span><br><span class="line">  openLocation,</span><br><span class="line">  uploadImage,</span><br><span class="line">  resetReady</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>路由文件调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resetReady, share &#125; <span class="keyword">from</span> <span class="string">&#x27;utils/wechat-js-sdk&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router =&gt; &#123;</span><br><span class="line">  router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//重置签名实例</span></span><br><span class="line">    <span class="title function_">resetReady</span>();</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">share</span>();</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序3D轮播</title>
      <link href="2021/01/23/mini-program-swiper-by-3d/"/>
      <url>2021/01/23/mini-program-swiper-by-3d/</url>
      
        <content type="html"><![CDATA[<p>微信小程序原生Swiper组件实现的3d轮播效果，废话不说，直接上效果</p><p><img src="1.gif" alt=""></p><h2 id="实现关键点"><a href="#实现关键点" class="headerlink" title="实现关键点"></a>实现关键点</h2><ul><li>设置前后留白 previous-margin=”50px” next-margin=”50px”</li><li>设置3d缩放  当前显示的图片transform: scale(1);其他图片transform: scale(0.86);</li><li>图片宽高比50%  图片容器height: 0;padding-top: 50%; /<em>宽高比50%</em>/， 然后图片  position:absolute;left:0;top:0;width:100%;height: 100%;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">swiper</span> <span class="attr">previous-margin</span>=<span class="string">&quot;50px&quot;</span> <span class="attr">next-margin</span>=<span class="string">&quot;50px&quot;</span> <span class="attr">indicator-dots</span>=<span class="string">&quot;&#123;&#123;indicatorDots&#125;&#125;&quot;</span> <span class="attr">circular</span> <span class="attr">class</span>=<span class="string">&quot;banner-swiper&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">autoplay</span>=<span class="string">&quot;&#123;&#123;autoplay&#125;&#125;&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;&#123;&#123;interval&#125;&#125;&quot;</span> <span class="attr">duration</span>=<span class="string">&quot;&#123;&#123;duration&#125;&#125;&quot;</span> <span class="attr">bindchange</span>=<span class="string">&quot;swiperChange&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;banners&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;swiper-item &#123;&#123;nowIdx==index?&#x27;active&#x27;:&#x27;&#x27;&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleBannerClick&quot;</span> <span class="attr">data-link</span>=<span class="string">&quot;&#123;&#123;item.link&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item.src&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner-swiper</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">340</span>rpx;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.86</span>);</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">8s</span> ease;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">50%</span>; <span class="comment">/*宽高比50%*/</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-item</span> image &#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.swiper-item</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">indicatorDots</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">autoplay</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">interval</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">banners</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">src</span>: <span class="string">&#x27;https://picsum.photos/750/375?random=1&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>: <span class="string">&#x27;//zhuowenzhou.com&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">src</span>: <span class="string">&#x27;https://picsum.photos/750/375?random=2&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>: <span class="string">&#x27;//zhuowenzhou.com&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">src</span>: <span class="string">&#x27;https://picsum.photos/750/375?random=3&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>: <span class="string">&#x27;//zhuowenzhou.com&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">nowIdx</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">swiperChange</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">nowIdx</span>: e.<span class="property">detail</span>.<span class="property">current</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码片段地址: <a href="https://developers.weixin.qq.com/s/ioYSsymi7bn0">微信小程序3D轮播</a></p>]]></content>
      
      
      <categories>
          
          <category> Swiper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>探索css中的z-index的原理</title>
      <link href="2021/01/20/css-z-index/"/>
      <url>2021/01/20/css-z-index/</url>
      
        <content type="html"><![CDATA[<p>很多人经常使用z-index属性，大部分的人或许只知道是垂直于屏幕的一条线，并且值越大层级越高。但实际使用过程中，还是会碰到各种各种不可思议的坑。例如设了没效果？有效果但覆盖的顺序不对？如果你也有这方面的疑问就一起来看看吧。</p><h2 id="z-index生效的条件"><a href="#z-index生效的条件" class="headerlink" title="z-index生效的条件"></a>z-index生效的条件</h2><p>不是所有设置了z-index值的容器就一定有效果，必须是设置了<strong>position:relative/absolute/fixed/sticky</strong>。</p><p class="codepen" data-height="411" data-theme-id="dark" data-default-tab="css,result" data-user="JoeZhuo" data-slug-hash="gOwEjdr" style="height: 411px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="gOwEjdr">  <span>See the Pen <a href="https://codepen.io/JoeZhuo/pen/gOwEjdr">  gOwEjdr</a> by Joe (<a href="https://codepen.io/JoeZhuo">@JoeZhuo</a>)  on <a href="https://codepen.io">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>从上面的demo可以看出，设置非static之外的定位才能使z-index生效。同时如果只是设置了定位但没有设置z-index，z-index默认为auto。</p><h2 id="z-index值"><a href="#z-index值" class="headerlink" title="z-index值"></a>z-index值</h2><p>当设置了定位之后，z-index默认值为auto。同时z-index可以是<strong>正整数，负整数，零，auto</strong>等值。</p><h2 id="z-index值比较"><a href="#z-index值比较" class="headerlink" title="z-index值比较"></a>z-index值比较</h2><p>只有2个原则</p><ul><li>后来居上 —如果没有显示声明大小的，后来的元素会优先覆盖前面的元素</li><li>谁大谁上 —z-index值大的覆盖小的</li></ul><h2 id="层叠水平stacking-level"><a href="#层叠水平stacking-level" class="headerlink" title="层叠水平stacking level"></a>层叠水平stacking level</h2><p><img src="1.png" alt=""></p><h2 id="层叠上下文"><a href="#层叠上下文" class="headerlink" title="层叠上下文"></a>层叠上下文</h2><p>层叠上下文，你可以理解为 JS 中的作用域，一个页面中往往不仅仅只有一个层叠上下文(因为有很多种方式可以生成层叠上下文，只是你没有意识到而已)，在一个层叠上下文内，我们按照层叠水平的规则来堆叠元素。</p><p>正常情况下，一共有三种大的类型创建层叠上下文：</p><ul><li>默认创建层叠上下文</li><li>需要配合 z-index 触发创建层叠上下文</li><li>不需要配合 z-index 触发创建层叠上下文</li></ul><h3 id="默认创建层叠上下文"><a href="#默认创建层叠上下文" class="headerlink" title="默认创建层叠上下文"></a>默认创建层叠上下文</h3><p>默认创建层叠上下文，只有 HTML 根元素，这里你可以理解为 body 标签。它属于根层叠上下文元素，不需要任何 CSS 属性来触发。</p><h3 id="需要配合-z-index-触发创建层叠上下文"><a href="#需要配合-z-index-触发创建层叠上下文" class="headerlink" title="需要配合 z-index 触发创建层叠上下文"></a>需要配合 z-index 触发创建层叠上下文</h3><p>依赖 z-index 值创建层叠上下文的情况：</p><p>position 值为 relative/absolute/fixed(部分浏览器)<br>flex 项(父元素 display 为 flex|inline-flex)，注意是子元素，不是父元素创建层叠上下文<br>这两种情况下，需要设置具体的 z-index 值，不能设置 z-index 为 auto，这也就是 z-index: auto 和 z-index: 0 的一点细微差别。</p><p>前面我们提到，设置 position: relative 的时候 z-index 的值为 auto 会生效，但是这时候并没有创建层叠上下文，当设置 z-index 不为 auto，哪怕设置 z-index: 0 也会触发元素创建层叠上下文。</p><h3 id="不需要配合-z-index-触发创建层叠上下文"><a href="#不需要配合-z-index-触发创建层叠上下文" class="headerlink" title="不需要配合 z-index 触发创建层叠上下文"></a>不需要配合 z-index 触发创建层叠上下文</h3><ul><li>元素的透明度 opacity 小于1</li><li>元素的 mix-blend-mode 值不是 normal</li><li>元素的以下属性的值不是 none：</li><li>transform</li><li>filter</li><li>perspective</li><li>clip-path</li><li>mask / mask-image / mask-border</li><li>元素的 isolution 属性值为 isolate</li><li>元素的 -webkit-overflow-scrolling 属性为 touch</li><li>元素的 will-change 属性具备会创建层叠上下文的值</li></ul><p>介绍完如何创建层叠上下文概念以及创建方式后，需要说明的是，创建了层叠上下文的元素可以理解局部层叠上下文，它只影响其子孙代元素，它自身的层叠水平是由它的父层叠上下文所决定的。</p><h2 id="比较两个-DOM-元素显示顺序"><a href="#比较两个-DOM-元素显示顺序" class="headerlink" title="比较两个 DOM 元素显示顺序"></a>比较两个 DOM 元素显示顺序</h2><ul><li>如果是在相同的层叠上下文，按照层叠水平的规则来显示元素</li><li>如果是在不同的层叠上下文中，先找到共同的祖先层叠上下文，然后比较共同层叠上下文下这个两个元素所在的局部层叠上下文的层叠水平。</li></ul><p>总结下来就是永远在同一个层叠上下文中比较。如果两个元素在DOM中不是同级关系的则找到他们最近的一个同属于同一个上下文的父节点比较。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Husky &amp; Nodejs自定义你的Git钩子</title>
      <link href="2021/01/19/git-hooks-husky-nodejs/"/>
      <url>2021/01/19/git-hooks-husky-nodejs/</url>
      
        <content type="html"><![CDATA[<h2 id="背景就是所谓产生需求的场景"><a href="#背景就是所谓产生需求的场景" class="headerlink" title="背景就是所谓产生需求的场景"></a>背景就是所谓产生需求的场景</h2><p>有时我们需要使用hooks对git的各类操作进行控制，就有了所谓的钩子（hooks）。然后有个问题是hooks只会存在于本地不会推送到远程仓库，导致无法团队间共享，维护是个大问题。因此 <strong>Husky</strong> 应运而生。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>初始化git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init      </span><br></pre></td></tr></table></figure><p>初始化package.json</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init --y   </span><br></pre></td></tr></table></figure><p>安装husk@3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev husky@3</span><br></pre></td></tr></table></figure><h2 id="修改package-json"><a href="#修改package-json" class="headerlink" title="修改package.json"></a>修改package.json</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;git-hooks-demo&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;husky&quot;</span>: <span class="string">&quot;^3.1.0&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;husky&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hooks&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;pre-commit&quot;</span>: <span class="string">&quot;node pre-commit&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="编写项目根目录下的pre-commit-js"><a href="#编写项目根目录下的pre-commit-js" class="headerlink" title="编写项目根目录下的pre-commit.js"></a>编写项目根目录下的pre-commit.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> execSync = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="property">execSync</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;project.config.json &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 检查开始&#x27;</span>);</span><br><span class="line">    <span class="comment">// 检查暂存区是否存在修改appid</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="title function_">execSync</span>(<span class="string">`git diff --staged project.config.json`</span>, &#123; <span class="attr">encoding</span>: <span class="string">&#x27;utf-8&#x27;</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> appid = result.<span class="title function_">match</span>(<span class="regexp">/appid/g</span>);</span><br><span class="line">    <span class="keyword">if</span> (appid &amp;&amp; appid.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;appid 非法改动，无法提交&#x27;</span>)</span><br><span class="line">        process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;project.config.json 读取异常&#x27;</span>, e)</span><br><span class="line">    process.<span class="title function_">exit</span>(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;project.config.json &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 检查结束&#x27;</span>)</span><br><span class="line">process.<span class="title function_">exit</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  motao-mini git:(feature/<span class="comment">#引入hooks检查) ✗ git commit -m test_message</span></span><br><span class="line">husky &gt; pre-commit (node v14.15.1)</span><br><span class="line">project.config.json &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 检查开始</span><br><span class="line">appid 非法改动，无法提交</span><br><span class="line">husky &gt; pre-commit hook failed (add --no-verify to bypass)</span><br></pre></td></tr></table></figure><h2 id="各类奇怪问题汇总"><a href="#各类奇怪问题汇总" class="headerlink" title="各类奇怪问题汇总"></a>各类奇怪问题汇总</h2><ul><li>husky hooks not work（钩子不生效的），执行以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf .git/hooks</span><br><span class="line">npm install -D husky</span><br></pre></td></tr></table></figure></li><li>命令行生效，但GUI(Tower,SourceTree,Sublime)之类的不生效的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall husky &amp;&amp; npm install --save-dev husky@3</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决javascript按钮多次重复点击</title>
      <link href="2021/01/14/ignoreMulti/"/>
      <url>2021/01/14/ignoreMulti/</url>
      
        <content type="html"><![CDATA[<p>在开发的过程中，我们经常会碰到一个问题，按钮疯狂点击，节流或者防抖其实解决不了这类问题，所有才有了下面这个方法，亲测可用<a href="https://lequ7.com/guan-yu-qian-duan-you-ya-jie-jue-an-niu-chong-fu-dian-ji-wen-ti.html">参考地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 忽略重复事件函数 参考地址：https://lequ7.com/guan-yu-qian-duan-you-ya-jie-jue-an-niu-chong-fu-dian-ji-wen-ti.html</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">执行函数</span>&#125; func </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">是否自动解锁，true为手动，false为自动</span>&#125; manual </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">ignoreMulti</span> = (<span class="params">func, manual = <span class="literal">false</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> lock = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (lock) <span class="keyword">return</span>;</span><br><span class="line">    lock = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">done</span> = (<span class="params"></span>) =&gt; (lock = <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (manual) <span class="keyword">return</span> func.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...args, done);</span><br><span class="line">    <span class="keyword">let</span> promise = func.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...args);</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(promise).<span class="title function_">finally</span>(done);</span><br><span class="line">    <span class="keyword">return</span> promise;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自动解锁</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> regeneratorRuntime <span class="keyword">from</span> <span class="string">&quot;../../../../utils/runtime.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ignoreMulti &#125; <span class="keyword">from</span> <span class="string">&quot;../../../../utils/util.js&quot;</span>;</span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">onLoad</span>(<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">handlerConfirm</span> = <span class="title function_">ignoreMulti</span>(<span class="variable language_">this</span>.<span class="property">handlerConfirm</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">handlerConfirm</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">checkInfo</span>()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> &#123; success, data, msg &#125; = <span class="keyword">await</span> <span class="title function_">createOrder</span>(<span class="title function_">filterParams</span>(&#123;</span><br><span class="line">      <span class="attr">from</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">goodsId</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">goodsId</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">goodsId</span> || <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">quantity</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">num</span> || <span class="literal">null</span>,</span><br><span class="line">      ...<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">catchStatus</span>,</span><br><span class="line">      <span class="attr">pickupTime</span>: channel.<span class="property">data</span>.<span class="property">time</span>,</span><br><span class="line">      <span class="attr">pickupReservedMobile</span>: channel.<span class="property">data</span>.<span class="property">mobile</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">orderId</span>: data.<span class="property">restockOrderId</span></span><br><span class="line">      &#125;)</span><br><span class="line">      wx.<span class="title function_">nextTick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getPayParams</span>(data.<span class="property">restockOrderId</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">errorToast</span>(msg)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>手动解锁</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> regeneratorRuntime <span class="keyword">from</span> <span class="string">&#x27;../../../../utils/runtime.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ignoreMulti &#125; <span class="keyword">from</span> <span class="string">&#x27;../../../../utils/util.js&#x27;</span>;</span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">handleOrder</span> = <span class="title function_">ignoreMulti</span>(<span class="variable language_">this</span>.<span class="property">handleOrder</span>, <span class="literal">true</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">handleOrder</span>(<span class="params">e, done</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> arr = <span class="variable language_">this</span>.<span class="title function_">checkIsSelect</span>()</span><br><span class="line">    <span class="keyword">if</span> (arr === <span class="literal">false</span>) &#123;</span><br><span class="line">      <span class="title function_">done</span>();</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> &#123; success, msg &#125; = <span class="keyword">await</span> <span class="title function_">changeChecked</span>(&#123;</span><br><span class="line">      <span class="attr">goodsList</span>: arr.<span class="title function_">map</span>(<span class="function"><span class="params">x</span> =&gt;</span> x.<span class="property">goodsId</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">      <span class="comment">// 跳转到下单页面</span></span><br><span class="line">      wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">`/pages/stock/box/generateOrder/index`</span>,</span><br><span class="line">        <span class="title function_">complete</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="comment">//由于微信跳转有延时性需要延时解锁</span></span><br><span class="line">          <span class="built_in">setTimeout</span>(done, <span class="number">2000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">errorToast</span>(msg);</span><br><span class="line">      <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue-less-variables</title>
      <link href="2021/01/14/vue-less-variables/"/>
      <url>2021/01/14/vue-less-variables/</url>
      
        <content type="html"><![CDATA[<h2 id="vue项目中引入less的全局变量"><a href="#vue项目中引入less的全局变量" class="headerlink" title="vue项目中引入less的全局变量"></a>vue项目中引入less的全局变量</h2><p>项目根目录执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue add style-resources-loader</span><br></pre></td></tr></table></figure><p>vue.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">pluginOptions</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;style-resources-loader&#x27;</span>: &#123;</span><br><span class="line">            <span class="attr">preProcessor</span>: <span class="string">&#x27;less&#x27;</span>,</span><br><span class="line">            <span class="attr">patterns</span>: [</span><br><span class="line">                path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./src/assets/styles/variables.less&#x27;</span>),</span><br><span class="line">                path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./src/assets/styles/global.less&#x27;</span>)]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>variables.less</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@primary-color</span>: #ffa500;</span><br><span class="line"><span class="keyword">@info-color</span>: #b5f5ec;</span><br><span class="line"><span class="keyword">@success-color</span>: #<span class="number">52</span>c41a;</span><br><span class="line"><span class="keyword">@error-color</span>: #ffbb96;</span><br><span class="line"><span class="keyword">@warning-color</span>:#bae7ff;</span><br></pre></td></tr></table></figure><p>global.less</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.primary-bg</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: @primary-color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.success-bg</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: @success-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;Vue logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./assets/logo.png&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>less 全局变量引入<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>primary color<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span>info color<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;success&quot;</span>&gt;</span>success color<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>error color<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>less 全局类名引入<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;primary-bg&quot;</span>&gt;</span>primary-bg<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;success-bg&quot;</span>&gt;</span>success-bg<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&quot;App&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scope</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span><br><span class="line"><span class="language-css">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.primary</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: @primary-color;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: @info-color;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.success</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: @success-color;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.error</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: @error-color;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.warning</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: @warning-color;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果图<br><img src="1.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue less less-variables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则快速入门</title>
      <link href="2020/08/11/regex/"/>
      <url>2020/08/11/regex/</url>
      
        <content type="html"><![CDATA[<h2 id="何为正则，干嘛用的"><a href="#何为正则，干嘛用的" class="headerlink" title="何为正则，干嘛用的"></a>何为正则，干嘛用的</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>正则表达式是<strong>对字符串操作</strong>的一种匹配模式，它由<strong>字符</strong>和<strong>元字符</strong>组成，然后对目标字符串进行<strong>匹配</strong>。</p><h3 id="匹配"><a href="#匹配" class="headerlink" title="匹配"></a>匹配</h3><ul><li>匹配什么？ 匹配目标字符串中对应的字符和位置。</li><li>匹配了能做什么？<ul><li>校验：也是我们最常用到的，匹配到则存在。</li><li>提取：当匹配到对应的字符时，可以将其提取出来以作他用。</li><li>替换：当匹配到对应的字符时，可以将其替换为指定的字符(例如：使用 replace 方法)，以此实现增删改功能。</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>正则表达式是由字符和元字符组成的表达式，它能对目标字符串里的字符和位置进行匹配，并能对其进行校验，提取和替换。</p><h2 id="正则入门咯"><a href="#正则入门咯" class="headerlink" title="正则入门咯"></a>正则入门咯</h2><p>推荐个正则的可视化网站 <a href="https://jex.im/regulex">https://jex.im/regulex</a>，后续 demo 以 js 方式编写。</p><h3 id="创建正则"><a href="#创建正则" class="headerlink" title="创建正则"></a>创建正则</h3><ul><li>字面量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/zhuowenzhou/</span>;</span><br></pre></td></tr></table></figure><ul><li>构造函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;zhuowenzhou&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面两种写法是等价的.它们的主要区别是，第一种方法是在编译时创建正则表达式，第二种方法则是在运行时创建正则表达式。</p><h4 id="注意：个人推荐第一种，简单粗暴不用考虑转移，直观好看好阅读。"><a href="#注意：个人推荐第一种，简单粗暴不用考虑转移，直观好看好阅读。" class="headerlink" title="注意：个人推荐第一种，简单粗暴不用考虑转移，直观好看好阅读。"></a>注意：个人推荐第一种，简单粗暴不用考虑转移，直观好看好阅读。</h4><h2 id="字符和元字符"><a href="#字符和元字符" class="headerlink" title="字符和元字符"></a>字符和元字符</h2><ul><li>字符：就是计算机字符编码，例如：我们常见 数字、英文字母 等。<br>元字符： 这个是我们要说的重点。</li><li>元字符也被称为特殊字符。是一些用来表示特殊语义的字符。如\d 表示 0 到 9 的数字。</li></ul><h3 id="元字符太多不展开，想了解更多点击这里"><a href="#元字符太多不展开，想了解更多点击这里" class="headerlink" title="元字符太多不展开，想了解更多点击这里"></a>元字符太多不展开，想了解更多点击<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">这里</a></h3><h2 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h2><ul><li>普通匹配 指不包含元字符的匹配</li><li>模糊匹配 由元字符组成匹配多个字符<ul><li>纵向匹配。正则匹配字符时，如果这个字符，不是唯一的，它可以是 a，也可以是 b，甚至更多其他可能中的一个。例如选择 26 个字符中的一个</li><li>横向匹配。正则匹配字符时，如果这个字符不是只出现一次，它可能出现多次，甚至最少几次，最多几次。</li></ul></li></ul><p>简单理解就是，纵向匹配是要一个范围的其中一个东西，而横向匹配是具体某个东西，只是这个东西个数是 0 ～ N。</p><h2 id="正则表达式方法"><a href="#正则表达式方法" class="headerlink" title="正则表达式方法"></a>正则表达式方法</h2><p>正则表达式可以被用于 RegExp 的 exec 和 test 方法以及 String 的 match、replace、search 和 split 方法。</p><h3 id="检验类"><a href="#检验类" class="headerlink" title="检验类"></a>检验类</h3><ul><li>test：RegExp 方法，校验成功则返回 true 否则返回 false。也是最常用的校验方法。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/cat/</span>;</span><br><span class="line"><span class="keyword">var</span> result = regex.<span class="title function_">test</span>(<span class="string">&quot;this is a cat&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; true</span></span><br></pre></td></tr></table></figure><ul><li>search：RegExp 方法，校验成功则返回匹配到的位置索引，失败则返回-1。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/cat/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;this is a cat&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">search</span>(regex);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; 10</span></span><br></pre></td></tr></table></figure><h3 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h3><ul><li>exec：RegExp 方法，返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/cat/</span>;</span><br><span class="line"><span class="keyword">var</span> result = regex.<span class="title function_">exec</span>(<span class="string">&quot;this is a cat&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; [&quot;cat&quot;, index: 10, input: &quot;this is a cat&quot;, groups: undefined]</span></span><br></pre></td></tr></table></figure><ul><li>match：String 方法，返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/cat/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;this is a cat&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">match</span>(regex);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; [&quot;cat&quot;, index: 10, input: &quot;this is a cat&quot;, groups: undefined]</span></span><br></pre></td></tr></table></figure><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><ul><li>replace：String 方法，使用提供的字符串替换掉匹配到的字符串。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/cat/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;this is a cat&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">replace</span>(regex, <span class="string">&quot;dog&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; &quot;this is a dog&quot;</span></span><br></pre></td></tr></table></figure><h2 id="元字符-字符集合-abc"><a href="#元字符-字符集合-abc" class="headerlink" title="元字符-字符集合[abc]"></a>元字符-字符集合[abc]</h2><p>举个 🌰：正则表达式<font color="#e53935">/x[mny]z/</font>,可以接受的匹配结果是 <strong>xmz</strong>,<strong>xnz</strong>,<strong>xyz</strong> 三种情况。<font color="#e53935">[mny]</font>称为字符集合，用方括号<font color="#e53935">[]</font>表示。</p><p>字符集合可以匹配方括号中的任意一个字符。按照上面的例子,x 和 z 之间的字符只能是方括号里面的 mny 其中一个。</p><h3 id="表示范围-a-z"><a href="#表示范围-a-z" class="headerlink" title="表示范围[a-z]"></a>表示范围[a-z]</h3><p>如果一个字符集合里面有多个字符并且有一定的顺序情况下，可以使用<font color="#e53935">破折号(-)</font>来指定一个字符范围。</p><p>例如： 用<font color="#e53935">/[a-z]/</font>，可以从 a 到 z 的所有小写字母。<font color="#e53935">[1234abcdxyz]</font>,可以写成<font color="#e53935">[1-4a-dX-Z]</font></p><h3 id="反向字符集-abc"><a href="#反向字符集-abc" class="headerlink" title="反向字符集 [^abc]"></a>反向字符集 [^abc]</h3><p>当你在字符集合的<font color="#e53935">第一个</font>加上<font color="#e53935">^</font>脱字符,则表示反向的意思，就是说匹配任何不包含在放方括号的字符。<br>举个 🌰：<font color="#e53935">[^xyz]</font>则匹配任何不是 x 或 y 或 z 的字符。<font color="#e53935">[^xyz]</font> 和 <font color="#e53935">[^x-z]</font>等价</p><h3 id="元字符-特殊字符"><a href="#元字符-特殊字符" class="headerlink" title="元字符-特殊字符"></a>元字符-特殊字符</h3><p>一般情况下匹配单个字符直接写就行，但有些特殊字符如空格，制表，回车，换行等需要转义才能使用。</p><table><thead><tr><th align="left">特殊字符</th><th align="center">正则表达式</th><th align="right">记忆方式</th></tr></thead><tbody><tr><td align="left">换行符</td><td align="center">\n</td><td align="right">new line</td></tr><tr><td align="left">换页符</td><td align="center">\f</td><td align="right">form feed</td></tr><tr><td align="left">回车符</td><td align="center">\r</td><td align="right">return</td></tr><tr><td align="left">空白符</td><td align="center">\s</td><td align="right">space</td></tr><tr><td align="left">制表符</td><td align="center">\t</td><td align="right">tab</td></tr><tr><td align="left">垂直制表符</td><td align="center">\v</td><td align="right">vertical tab</td></tr><tr><td align="left">回退符</td><td align="center">[\b]</td><td align="right">backspace,之所以使用[]符号是避免和\b 重复</td></tr></tbody></table><h3 id="元字符-同时匹配多个字符"><a href="#元字符-同时匹配多个字符" class="headerlink" title="元字符-同时匹配多个字符"></a>元字符-同时匹配多个字符</h3><table><thead><tr><th align="left">特殊字符</th><th align="center">正则表达式</th><th align="right">记忆方式</th></tr></thead><tbody><tr><td align="left">除了换行符之外的任何字符</td><td align="center">.</td><td align="right">句号,除了句子结束符</td></tr><tr><td align="left">单个数字, [0-9]</td><td align="center">\d</td><td align="right">digit</td></tr><tr><td align="left">除了[0-9]</td><td align="center">\D</td><td align="right">not digit</td></tr><tr><td align="left">包括下划线在内的单个字符，[A-Za-z0-9_]</td><td align="center">\w</td><td align="right">word</td></tr><tr><td align="left">非单字字符</td><td align="center">\W</td><td align="right">not word</td></tr><tr><td align="left">匹配空白字符,包括空格、制表符、换页符和换行符</td><td align="center">\s</td><td align="right">space</td></tr><tr><td align="left">匹配非空白字符</td><td align="center">\S</td><td align="right">not space</td></tr></tbody></table><h3 id="元字符-量词"><a href="#元字符-量词" class="headerlink" title="元字符-量词"></a>元字符-量词</h3><p>在匹配时，匹配到的字符经常会出现重复的情况，这时就需要通过量词对次数进行限制。</p><h4 id="m-n-形式"><a href="#m-n-形式" class="headerlink" title="{m,n} 形式"></a>{m,n} 形式</h4><p>{m,n}是最常见最基础的量词形式，m 和 n 都是整数。匹配前面的字符至少 m 次，最多 n 次。</p><p>栗子：<font color="#e53935">/o{1, 3}/</font>表示 a 出现的次数最少一次，最多 3 次。 所以它并不匹配 <font color="#e53935">ggle</font>中的任意字符。但可以匹配 <font color="#e53935">google</font> 中的 o，匹配 <font color="#e53935">google</font> 中的前两个 o，也匹配 <font color="#e53935">goooooogle</font> 中的前三个 o。注意: 当匹配 <font color="#e53935">goooooogle</font> 时，匹配的值是“ooo”，即使原始的字符串中有更多的 o。</p><h4 id="简写形式"><a href="#简写形式" class="headerlink" title="简写形式"></a>简写形式</h4><table><thead><tr><th align="left">匹配规则</th><th align="center">元字符</th><th align="right">记忆方式</th></tr></thead><tbody><tr><td align="left">具体只能多少次</td><td align="center">{n}</td><td align="right">{n}内只有一个数字。定死了，是几就只能是几次</td></tr><tr><td align="left">至少 min 次</td><td align="center">{min,}</td><td align="right">左边 min 表示至少 min 次，右边没有则可以无限次</td></tr><tr><td align="left">至多 max 次</td><td align="center">{0, max}</td><td align="right">左边数字为 0 表示至少 0 次，右边 max 表示至多 max 次</td></tr><tr><td align="left">0 次或 1 次</td><td align="center">?</td><td align="right">有没？</td></tr><tr><td align="left">0 次或无数次</td><td align="center">*</td><td align="right">天上星星</td></tr><tr><td align="left">1 次或无数次</td><td align="center">+</td><td align="right">加 1，就是至少一个咯</td></tr><tr><td align="left">特定次数</td><td align="center">{min, max}</td><td align="right">闭合区间，包括边界,{1,3}就是 1 到 3 次</td></tr></tbody></table><h3 id="贪婪匹配与惰性匹配"><a href="#贪婪匹配与惰性匹配" class="headerlink" title="贪婪匹配与惰性匹配"></a>贪婪匹配与惰性匹配</h3><ul><li><p>贪婪匹配默认情况下，量词(包括简写形式)是贪婪的，即它们会尽可能的多去匹配符合条件的字符。/o{1,3}/，当它匹配“goooooogle”时，o 出现 1 次，2 次，3 次都是符合的，但它还是会贪婪地尽可能匹配最多的次数。所以它不会匹配到 1 个 o 时就结束，而是匹配得到 3 个 o。</p></li><li><p>惰性匹配(也称非贪婪)有时候我们不希望量词那么贪婪，只希望它匹配到刚好符合的次数就行，不要那么多。那怎么办呢，此时只需在后面加上一个问号?就行。举个栗子：/o{2,3}?/，当它匹配“goooooogle”时,由于此时是惰性匹配，所以它只会匹配得到 2 个 o，而不会贪婪地要 3 个。</p></li></ul><h3 id="元字符-多选分支-x-y"><a href="#元字符-多选分支-x-y" class="headerlink" title="元字符-多选分支 x|y"></a>元字符-多选分支 x|y</h3><p>多选分支用于匹配不同的情况。例如：要匹配 dog 和 cat 可以使用 <font color="#e53935">/dog|cat/</font> , 通过管道符 <font color="#e53935">|</font> 将不同的候选字符隔开。</p><h4 id="多选具有惰性"><a href="#多选具有惰性" class="headerlink" title="多选具有惰性"></a>多选具有惰性</h4><p>例如：当我们用 <font color="#e53935">/google|google.com/</font> 去匹配“google”时，得到的结果是 “google”。改成 <font color="#e53935">/google.com|google/</font> 则会得到 “google.com”</p><h3 id="元字符-位置匹配"><a href="#元字符-位置匹配" class="headerlink" title="元字符-位置匹配"></a>元字符-位置匹配</h3><p><strong>正则表达式是匹配模式，要么匹配字符，要么匹配位置。</strong></p><p>既然要匹配位置，那字符串里的位置是指什么，很简单，指的就是字符与字符之间的位置，或者是字符之间的空字符<font color="#e53935">“”</font>。例如：字符串”bai”就有 4 个位置，分别为：”1<font color="#e53935">b</font>2<font color="#e53935">a</font>3<font color="#e53935">i</font>4”。注意还包括字符开头和结尾的位置。</p><p><strong>单词边界\b 和非单词边界\B</strong></p><ul><li><font color="#e53935">\b</font> 单词边界</li></ul><p>匹配一个词的边界。一个词的边界就是一个词不被另外一个“字”字符跟随的位置或者前面跟其他“字”字符的位置，例如在字母和空格之间。注意，匹配中不包括匹配的字边界。换句话说，一个匹配的词的边界的内容的长度是 0。（不要和[\b]混淆了）<font color="#e53935">\b</font>，其中 b 是 boundary 边界的首字母</p><p>例子 1:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;[JS] demo_01.zip&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/\b/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">//[#JS#] #demo_01#.#zip#</span></span><br></pre></td></tr></table></figure><p>例子 2: 匹配单词 cat， 而不是包含 cat 的单词，使用\b 确保它的前后两边是否都为单词与非单词之间的位置。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;this is a cat, not a bigcat&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/\bcat\b/g</span>, <span class="string">&quot;dog&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">//this is a dog, not a bigcat</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;moon&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\bm/</span>;</span><br><span class="line"><span class="keyword">var</span> reg2 = <span class="regexp">/oo\b/</span>;</span><br><span class="line"><span class="keyword">var</span> reg3 = <span class="regexp">/oon\b/</span>;</span><br><span class="line"><span class="keyword">var</span> reg4 = <span class="regexp">/\w\b\w/</span>;</span><br><span class="line">reg1.<span class="title function_">test</span>(str); <span class="comment">//true  /\bm/匹配“moon”中的‘m’；</span></span><br><span class="line">reg2.<span class="title function_">test</span>(str); <span class="comment">//false 不匹配&quot;moon&quot;中的&#x27;oo&#x27;，因为&#x27;oo&#x27;被一个“字”字符&#x27;n&#x27;紧跟着</span></span><br><span class="line">reg3.<span class="title function_">test</span>(str); <span class="comment">//true 匹配&quot;moon&quot;中的&#x27;oon&#x27;，因为&#x27;oon&#x27;是这个字符串的结束部分。这样他没有被一个“字”字符紧跟着</span></span><br><span class="line">reg4.<span class="title function_">test</span>(str); <span class="comment">//false 将不能匹配任何字符串，因为在一个单词中间的字符永远也不可能同时满足没有“字”字符跟随和有“字”字符跟随两种情况。</span></span><br></pre></td></tr></table></figure><ul><li><font color="#e53935">\B</font> 非单词边界</li></ul><p>很简单，就是单词边界的反面。具体来说就是单词内部之间的位置，非单词内部之间的位置，非单词与开头和结尾的位置，即 \w 与 \w、 \W 与 \W、^(开头) 与 \W，\W 与 $(结尾) 之间的位置。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;[JS] demo_01.zip&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/\B/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">//#[J#S]# d#e#m#o#_#0#1.z#i#p</span></span><br></pre></td></tr></table></figure><h3 id="字符串边界"><a href="#字符串边界" class="headerlink" title="字符串边界^ $"></a>字符串边界^ $</h3><p><font color="#e53935">^</font>匹配输入的开始。如果多行标志被设置为 true，那么也匹配换行符后紧跟的位置。例如，/^A/ 并不会匹配 “an A” 中的 ‘A’，但是会匹配 “An E” 中的 ‘A’。当 ‘^’ 作为第一个字符出现在一个字符集合模式时，它将会有不同的含义</p><p><font color="#e53935">$</font>匹配输入的结束。如果多行标志被设置为 true，那么也匹配换行符前的位置。例如，/t$/ 并不会匹配 “eater” 中的 ‘t’，但是会匹配 “eat” 中的 ‘t’。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;[JS] demo_01.zip&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/^|$/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">//#[JS] demo_01.zip#</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;[JS\ndemo_01.zip&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/^|$/gm</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#[JS#</span></span><br><span class="line"><span class="comment">#demo_01.zip#</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="特定字符的前后位置"><a href="#特定字符的前后位置" class="headerlink" title="特定字符的前后位置"></a>特定字符的前后位置</h3><p>如果匹配的位置是在某个特定位置呢，某个特定字符的前后位置。这时就可以用到下面的元字符：</p><ul><li><font color="#e53935">先行断言 x(?=y)</font><br>x(?=y) 匹配’x’仅仅当’x’后面跟着’y’.这种叫做先行断言。例如，/Jack(?=Sprat)/会匹配到’Jack’仅当它后面跟着’Sprat’。/Jack(?=Sprat|Frost)/匹配‘Jack’仅当它后面跟着’Sprat’或者是‘Frost’。但是‘Sprat’和‘Frost’都不是匹配结果的一部分。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;Jack Come In&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/Jack(?=Sprat)/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; Jack Come In</span></span><br><span class="line"><span class="keyword">var</span> result2 = <span class="string">&quot;JackSprat Come In&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/Jack(?=Sprat)/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result2); <span class="comment">// =&gt; #Sprat Come In</span></span><br></pre></td></tr></table></figure><ul><li><font color="#e53935">后行断言 (?&lt;=y)x</font><br>匹配’x’仅当’x’前面是’y’.这种叫做后行断言。例如，/(?&lt;=Jack)Sprat/会匹配到’ Sprat ‘仅仅当它前面是’ Jack ‘。/(?&lt;=Jack|Tom)Sprat/匹配‘ Sprat ’仅仅当它前面是’Jack’或者是‘Tom’。但是‘Jack’和‘Tom’都不是匹配结果的一部分</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="string">&quot;Jack Come In&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/(?&lt;=Jack)Sprat/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; Jack Come In</span></span><br><span class="line"><span class="keyword">var</span> result2 = <span class="string">&quot;JackSprat Come In&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/(?&lt;=Jack)Sprat/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result2); <span class="comment">// =&gt; ack# Come In</span></span><br></pre></td></tr></table></figure><ul><li><font color="#e53935">正向否定查找 x(?!y)</font><br>仅仅当’x’后面不跟着’y’时匹配’x’，这被称为正向否定查找。<br>例如，仅仅当这个数字后面没有跟小数点的时候，/\d+(?!.)/ 匹配一个数字。正则表达式/\d+(?!.)/.exec(“3.141”)匹配‘141’而不是‘3.141’</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> r1 = <span class="string">&quot;redcat or reddog&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/red(?!cat)/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> r2 = <span class="string">&quot;redcat or reddog&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/red(?!dog)/g</span>, <span class="string">&quot;#&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(r1); <span class="comment">// =&gt; redcat or #dog</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(r2); <span class="comment">// =&gt; #cat or reddog</span></span><br></pre></td></tr></table></figure><ul><li><font color="#e53935">反向否定查找 (?&lt;!y)x</font><br>仅仅当’x’前面不是’y’时匹配’x’，这被称为反向否定查找。<br>例如, 仅仅当这个数字前面没有负号的时候，/(?&lt;!-)\d+/ 匹配一个数字。<br>/(?&lt;!-)\d+/.exec(‘3’) 匹配到 “3”.<br>/(?&lt;!-)\d+/.exec(‘-3’) 因为这个数字前有负号，所以没有匹配到。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/(?&lt;!-)\d+/</span>.<span class="title function_">exec</span>(<span class="string">&quot;3&quot;</span>)); <span class="comment">// =&gt; [&quot;3&quot;, index: 0, input: &quot;3&quot;, groups: undefined]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/(?&lt;!-)\d+/</span>.<span class="title function_">exec</span>(<span class="string">&quot;-3&quot;</span>)); <span class="comment">// =&gt; null</span></span><br></pre></td></tr></table></figure><p><strong>位置匹配整理</strong></p><table><thead><tr><th align="left">边界和标志</th><th align="center">正则表达式</th><th align="right">记忆</th></tr></thead><tbody><tr><td align="left">单词边界</td><td align="center">\b</td><td align="right">boundary</td></tr><tr><td align="left">非单词边界</td><td align="center">\B</td><td align="right">not boundary</td></tr><tr><td align="left">字符串开头</td><td align="center">^</td><td align="right">小头尖尖那么大个</td></tr><tr><td align="left">字符串结尾</td><td align="center">$</td><td align="right">美元符$</td></tr><tr><td align="left">先行断言</td><td align="center">x(?=y)</td><td align="right">?=y 则找前面的 x</td></tr><tr><td align="left">后行断言</td><td align="center">(?&lt;=y)x</td><td align="right">没套路</td></tr><tr><td align="left">正向否定查找</td><td align="center">x(?!y)</td><td align="right">!表示否定，如果不是 y 则匹配前面的 x</td></tr><tr><td align="left">反向否定查找</td><td align="center">(?&lt;!y)x</td><td align="right">没套路</td></tr></tbody></table><h3 id="正则表达式标志"><a href="#正则表达式标志" class="headerlink" title="正则表达式标志"></a>正则表达式标志</h3><table><thead><tr><th align="left">标志</th><th align="right">描述</th></tr></thead><tbody><tr><td align="left">g</td><td align="right">全局搜索</td></tr><tr><td align="left">i</td><td align="right">不区分大小写搜索</td></tr><tr><td align="left">m</td><td align="right">多行搜索</td></tr><tr><td align="left">s</td><td align="right">允许 . 匹配换行符</td></tr><tr><td align="left">u</td><td align="right">使用 unicode 码的模式进行匹配</td></tr><tr><td align="left">y</td><td align="right">执行“粘性(sticky)”搜索,匹配从目标字符串的当前位置开始</td></tr></tbody></table><h2 id="分组–正则中括号的作用"><a href="#分组–正则中括号的作用" class="headerlink" title="分组–正则中括号的作用 ( )"></a>分组–正则中括号的作用 ( )</h2><p>捕获组: 匹配 x 并记住匹配项。例如，/(foo)/匹配并记住“foo bar”中的“foo”</p><ul><li>作为一个整体的部分匹配</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/(cat)/g.<span class="title function_">test</span>(<span class="string">&quot;cat cat cat dog&quot;</span>); <span class="comment">// =&gt; true</span></span><br></pre></td></tr></table></figure><ul><li>分支结构</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/^I love (JavaScript|Regular Expression)$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(<span class="string">&quot;I love JavaScript&quot;</span>)); <span class="comment">// =&gt; true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(<span class="string">&quot;I love Regular Expression&quot;</span>)); <span class="comment">//=&gt; true</span></span><br></pre></td></tr></table></figure><h3 id="分组引用"><a href="#分组引用" class="headerlink" title="分组引用"></a>分组引用</h3><p>括号形成的分组还具有一个重要的功能 就是分组引用。就是你可以将括号里正则，匹配到的字符进行提取，以及替换的操作。例如：我们要用正则来匹配一个日期格式，yyyy-mm-dd，我们可以写成分组形式的<font color="#e53935">/(\d{4})-(\d{2})-(\d{2})/</font> 。这里三个括号包裹的就分别对应分组 1，分组 2，分组 3。</p><p><strong>提取数据</strong><br>String 的 match 方法和正则的 exec 方法。</p><ul><li>match：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)/</span>;</span><br><span class="line"><span class="keyword">var</span> string = <span class="string">&quot;2020-02-20&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(string.<span class="title function_">match</span>(regex));</span><br><span class="line"><span class="comment">// =&gt;[&quot;2020-02-20&quot;, &quot;2020&quot;, &quot;02&quot;, &quot;20&quot;, index: 0, input: &quot;2020-02-20&quot;, groups: undefined]</span></span><br></pre></td></tr></table></figure><p>match 返回一个数组，第一个元素是整体匹配结果，然后是各个分组（括号里）匹配的内容，然后是匹配下标，最后是输入的文本。</p><ul><li>exec：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)/</span>.<span class="title function_">exec</span>(<span class="string">&quot;2020-02-20&quot;</span>));</span><br><span class="line"><span class="comment">// =&gt;[&quot;2020-02-20&quot;, &quot;2020&quot;, &quot;02&quot;, &quot;20&quot;, index: 0, input: &quot;2020-02-20&quot;, groups: undefined]</span></span><br></pre></td></tr></table></figure><ul><li>全局属性 $1 - $9 获取捕获数组的值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)/</span>;</span><br><span class="line"><span class="keyword">var</span> string = <span class="string">&quot;2020-02-20&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(string.<span class="title function_">match</span>(regex));</span><br><span class="line"><span class="comment">// =&gt;[&quot;2020-02-20&quot;, &quot;2020&quot;, &quot;02&quot;, &quot;20&quot;, index: 0, input: &quot;2020-02-20&quot;, groups: undefined]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>); <span class="comment">// &quot;2020&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$2</span>); <span class="comment">// &quot;02&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$3</span>); <span class="comment">// &quot;20&quot;</span></span><br></pre></td></tr></table></figure><p><strong>替换数据</strong><br>使用 String.prototype.replace 替换，例如日期转换：yyyy-mm-dd 替换成 dd/mm/yyyy</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)/</span>;</span><br><span class="line"><span class="keyword">var</span> string = <span class="string">&quot;2020-02-20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = string.<span class="title function_">replace</span>(regex, <span class="string">&quot;$3/$2/$1&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// =&gt; 20/02/2020</span></span><br></pre></td></tr></table></figure><h3 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h3><p>前面说到引用分组，它引用的分组是来自于匹配完后得到的结果。而反向引用也可以引用分组，只是它的分组来自于匹配阶段捕获到的分组。<br>举个 🌰：</p><blockquote><p>2020-02-02<br>2020.02.02<br>2020/02/02<br>要匹配上面三种格式，通常写法是</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/\d&#123;4&#125;[./-]\d&#123;2&#125;[./-]\d&#123;2&#125;/</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&quot;2020-02-20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">&quot;2020/02/20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">&quot;2020.02.20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str4 = <span class="string">&quot;2020-02/20&quot;</span>;</span><br><span class="line">regex.<span class="title function_">test</span>(str1); <span class="comment">// =&gt; true</span></span><br><span class="line">regex.<span class="title function_">test</span>(str2); <span class="comment">// =&gt; true</span></span><br><span class="line">regex.<span class="title function_">test</span>(str3); <span class="comment">// =&gt; true</span></span><br><span class="line">regex.<span class="title function_">test</span>(str4); <span class="comment">// =&gt; true</span></span><br></pre></td></tr></table></figure><p>从上面的结果看到，str1，str2，str3，是我们的期望结果，而 str4 却不是。我们期望的是连接符是保持一致的。即第一个是“-”的话第二个也必须是“-”，这时候就需要用到反向引用了。我们希望第二个连接符和第一个匹配到的保持一致。需要把第一个<font color="#e53935">[-/.]</font>加上括号<font color="#e53935">([-/.])</font>，样才能方便引用。第二个连接符需要和第一个保持一致，这就需要引用它。这个时候就用\1，来表示第一个引用，同理\2 和\3 等表示第二和第三个引用。那么之前的正则就改为了<font color="#e53935">/\d{4}([-/.])\d{2}\1\d{2}/</font>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/\d&#123;4&#125;([./-])\d&#123;2&#125;\1\d&#123;2&#125;/</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&quot;2020-02-20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">&quot;2020/02/20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">&quot;2020.02.20&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str4 = <span class="string">&quot;2020-02/20&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(str1)); <span class="comment">// =&gt; true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(str2)); <span class="comment">// =&gt; true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(str3)); <span class="comment">// =&gt; true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(str4)); <span class="comment">// =&gt; false</span></span><br></pre></td></tr></table></figure><h3 id="分组嵌套"><a href="#分组嵌套" class="headerlink" title="分组嵌套"></a>分组嵌套</h3><p>正则的匹配顺序是从左到右，同样分组也是这样的从左到右。我们只需按左括号的顺序，依次判断分组即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> r1 = <span class="regexp">/^((\d&#123;4&#125;)([-/.])\d&#123;2&#125;)\3\d&#123;2&#125;$/</span>;</span><br><span class="line">r1.<span class="title function_">exec</span>(<span class="string">&quot;2020-09-01&quot;</span>);</span><br><span class="line"><span class="comment">// =&gt; (4) [&quot;2020-09-01&quot;, &quot;2020-09&quot;, &quot;2020&quot;, &quot;-&quot;, index: 0, input: &quot;2020-09-01&quot;, groups: undefined]0: &quot;2020-09-01&quot;1: &quot;2020-09&quot;2: &quot;2020&quot;3: &quot;-&quot;groups: undefinedindex: 0input: &quot;2020-09-01&quot;length: 4__proto__: Array(0)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>); <span class="comment">// =&gt; 2020-09</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$2</span>); <span class="comment">// =&gt; 2020</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$3</span>); <span class="comment">// =&gt; -</span></span><br></pre></td></tr></table></figure><p><strong>从左往右分析</strong><br>第一组：((\d{4})([-/.])\d{2})<br>第二组：(\d{4})<br>第三组：([-/.])</p><p><strong>\10 表示什么</strong><br><font color="#e53935">\10</font> 表示第三个分组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^(1)(2)(3)(4)(5)(6)(7)(8)(9)(10)\10+$/</span>;</span><br><span class="line">reg.<span class="title function_">exec</span>(<span class="string">&quot;12345678910&quot;</span>); <span class="comment">//=&gt; null</span></span><br><span class="line">reg.<span class="title function_">exec</span>(<span class="string">&quot;1234567891010&quot;</span>); <span class="comment">//=&gt; (11) [&quot;1234567891010&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, index: 0, input: &quot;1234567891010&quot;, groups: undefined]</span></span><br></pre></td></tr></table></figure><p><strong>引用不存在的分组</strong></p><p>在正则里引用了不存在的分组时，此时正则不会报错，只是匹配反向引用的字符本身。例如\2，就匹配”\2”。</p><p><strong>注意</strong>：”\2”表示对”2”进行了转意。很可能转义的 2 就不是数字 2 了，就变成其他字符了！所以我们再使用时一定要注意不要引用不存在的分组！</p><h3 id="非捕获分组-换言之就是分组的还是分组，只是不捕获到内存"><a href="#非捕获分组-换言之就是分组的还是分组，只是不捕获到内存" class="headerlink" title="非捕获分组(换言之就是分组的还是分组，只是不捕获到内存)"></a>非捕获分组(换言之就是分组的还是分组，只是不捕获到内存)</h3><p>前面说到的分组都可以被引用，如果我不想被引用，则可以使用非捕获分组(?:p)。因为引用是会在内存里开辟一个位置，所以非捕获分组还可以避免浪费内存。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;shotcat&quot;</span>;</span><br><span class="line">str.<span class="title function_">replace</span>(<span class="regexp">/(shotca)(?:t)/</span>, <span class="string">&quot;$1,$2&quot;</span>); <span class="comment">// =&gt; &quot;shotca,$2&quot;</span></span><br><span class="line">str.<span class="title function_">replace</span>(<span class="regexp">/(shotca)(t)/</span>, <span class="string">&quot;$1,$2&quot;</span>); <span class="comment">// =&gt; &quot;shotca,t&quot;</span></span><br></pre></td></tr></table></figure><h2 id="正则匹配步骤与回溯"><a href="#正则匹配步骤与回溯" class="headerlink" title="正则匹配步骤与回溯"></a>正则匹配步骤与回溯</h2><h3 id="正则匹配步骤"><a href="#正则匹配步骤" class="headerlink" title="正则匹配步骤"></a>正则匹配步骤</h3><p>我们知道正则匹配的方向是从左到右的，那具体到每个字符的匹配步骤是怎样的。我们以一个例子来具体说明：</p><p>正则表达式/ab{1,3}bbc/ ,目标字符串为“abbbc”</p><ol><li>匹配 a</li><li>b{1,3} 根据贪婪模式匹配 bbb</li><li>然后 b 匹配到了字符串 c，发现不对，进行回退</li><li>b{1,3} 这次匹配 bb</li><li>b 匹配到 b</li><li>b 匹配到 c，发现又不对，继续回退</li><li>b{1,3}匹配 b</li><li>后面的 bbc 匹配到字符串的 bbc 结束</li></ol><h3 id="回朔"><a href="#回朔" class="headerlink" title="回朔"></a>回朔</h3><p>回溯法也称试探法，它的基本思想是：从问题的某一种状态（初始状态）出发，搜索从这种状态出发所能达到的所有“状态”，当一条路走到“尽头”的时候（不能再前进），再后退一步或若干步，从另一种可能“状态”出发，继续搜索，直到所有的“路径”（状态）都试探过。这种不断“前进”、不断“回溯”寻找解的方法，就称作“回溯法”。</p><p>本质上就是深度优先搜索算法。其中退到之前的某一步这一过程，我们称为“回溯”。从上面的描述过程中，可以看出，路走不通时，就会发生“回溯”。即，尝试匹配失败时，接下来的一步通常就是回溯。</p><p><strong>常见的回溯形式</strong></p><ul><li>贪婪量词<br>之前的例子都是贪婪量词相关的。比如 b{1,3}，因为其是贪婪的，尝试可能的顺序是从多往少的方向去尝试。首先会尝试”bbb”，然后再看整个正则是否能匹配。不能匹配时，吐出一个”b”，即在”bb”的基础上，再继续尝试。如果还不行，再吐出一个，再试。如果还不行呢？只能说明匹配失败了。</li></ul><p><strong>多个贪婪怎么办-先下手为强</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> string = <span class="string">&quot;12345&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/(\d&#123;1,3&#125;)(\d&#123;1,3&#125;)/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(string.<span class="title function_">match</span>(regex));</span><br><span class="line"><span class="comment">// =&gt; [&quot;12345&quot;, &quot;123&quot;, &quot;45&quot;, index: 0, input: &quot;12345&quot;]</span></span><br></pre></td></tr></table></figure><ul><li>惰性量词</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> string = <span class="string">&quot;12345&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/(\d&#123;1,3&#125;?)(\d&#123;1,3&#125;)/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(string.<span class="title function_">match</span>(regex));</span><br><span class="line"><span class="comment">// =&gt; [&quot;1234&quot;, &quot;1&quot;, &quot;234&quot;, index: 0, input: &quot;12345&quot;]</span></span><br></pre></td></tr></table></figure><ul><li>分支结构</li></ul><p>我们知道分支也是惰性的，比如/can|candy/，去匹配字符串”candy”，得到的结果是”can”，因为分支会一个一个尝试，如果前面的满足了，后面就不会再试验了。</p><p>分支结构，可能前面的子模式会形成了局部匹配，如果接下来表达式整体不匹配时，仍会继续尝试剩下的分支。这种尝试也可以看成一种回溯。</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><ol><li><p>贪婪量词“试”的策略是：买衣服砍价。价钱太高了，便宜点，不行，再便宜点。</p></li><li><p>惰性量词“试”的策略是：卖东西加价。给少了，再多给点行不，还有点少啊，再给点。</p></li><li><p>分支结构“试”的策略是：货比三家。这家不行，换一家吧，还不行，再换。</p></li></ol><p><strong>避免回朔</strong><br>对正则的情况进行合理搭配限制，当次数过多时，可以通过惰性量词进行合理限定，当正则匹配的数据存在关联时，则可以通过引用限定为具体的数据。这些都能有效减少回溯。</p><h2 id="正则表达式的阅读"><a href="#正则表达式的阅读" class="headerlink" title="正则表达式的阅读"></a>正则表达式的阅读</h2><p><strong>结构和操作符优先级</strong><br>那结构是什么？就是字符与元字符组成的一个整体。正则会将这个作为一个整体去匹配。例如<font color="#e53935">[abc]</font>，它就是由元字符<font color="#e53935">[]</font>和普通字符<font color="#e53935">abc</font>一起组成的一个结构。正则遇到后就会作为一个整体去匹配，匹配的字符可能是 abc 中的任意一个。JavaScript 正则表达式包含如下几种结构：字符字面量、字符组、量词、锚、分组、选择分支、反向引用。</p><table><thead><tr><th align="left">边界和标志</th><th align="center">正则表达式</th><th align="right">记忆</th></tr></thead><tbody><tr><td align="left">单词边界</td><td align="center">\b</td><td align="right">boundary</td></tr><tr><td align="left">非单词边界</td><td align="center">\B</td><td align="right">not boundary</td></tr><tr><td align="left">字符串开头</td><td align="center">^</td><td align="right">小头尖尖那么大个</td></tr><tr><td align="left">字符串结尾</td><td align="center">$</td><td align="right">美元符$</td></tr><tr><td align="left">先行断言</td><td align="center">x(?=y)</td><td align="right">?=y 则找前面的 x</td></tr><tr><td align="left">后行断言</td><td align="center">(?&lt;=y)x</td><td align="right">没套路</td></tr><tr><td align="left">正向否定查找</td><td align="center">x(?!y)</td><td align="right">!表示否定，如果不是 y 则匹配前面的 x</td></tr><tr><td align="left">反向否定查找</td><td align="center">(?&lt;!y)x</td><td align="right">没套路</td></tr></tbody></table><h3 id="正则表达式结构"><a href="#正则表达式结构" class="headerlink" title="正则表达式结构"></a>正则表达式结构</h3><table><thead><tr><th align="left">结构</th><th align="right">说明</th></tr></thead><tbody><tr><td align="left">字面量</td><td align="right">匹配一个具体字符，包括不用转义的和需要转义的。比如 a 匹配字符”a”，又比如\r 匹配回车</td></tr><tr><td align="left"></td><td align="right"></td></tr><tr><td align="left">字符组</td><td align="right">匹配一个字符，可以是多种可能之一，比如[0-9]，表示匹配一个数字。</td></tr><tr><td align="left"></td><td align="right"></td></tr><tr><td align="left">量词</td><td align="right">表示一个字符连续出现，比如 a{1,3}表示“a”字符连续出现 3 次。</td></tr><tr><td align="left"></td><td align="right"></td></tr><tr><td align="left">锚点</td><td align="right">匹配一个位置，而不是字符。比如^匹配字符串的开头，又比如\b 匹配单词边界</td></tr><tr><td align="left"></td><td align="right"></td></tr><tr><td align="left">分组</td><td align="right">用括号表示一个整体，比如(ab)+，表示”ab”两个字符连续出现多次</td></tr><tr><td align="left"></td><td align="right"></td></tr><tr><td align="left">分支</td><td align="right">多个子表达式多选一，比如 abc</td></tr><tr><td align="left"></td><td align="right"></td></tr><tr><td align="left">反向引用</td><td align="right">比如\2，表示引用第 2 个分组。</td></tr></tbody></table><h3 id="操作符优先级"><a href="#操作符优先级" class="headerlink" title="操作符优先级"></a>操作符优先级</h3><table><thead><tr><th>操作符描述</th><th>操作符</th><th>优先级</th></tr></thead><tbody><tr><td>括号和方括号</td><td>(…)、(?:…)、(?=…)、(?!…)、[…]</td><td>1</td></tr><tr><td>量词限定符</td><td>{m}、{m,n}、{m,}、?、*、+</td><td>2</td></tr><tr><td>量词限定符</td><td>{m}、{m,n}、{m,}、?、*、+</td><td>3</td></tr><tr><td>位置和序列</td><td>^ 、$、 \元字符、 一般字符</td><td>4</td></tr><tr><td>管道符（竖杠）</td><td>|</td><td>5</td></tr></tbody></table><p><img src="operator_priority.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vim 快速入门</title>
      <link href="2020/08/11/vim/"/>
      <url>2020/08/11/vim/</url>
      
        <content type="html"><![CDATA[<h2 id="VIM-模式"><a href="#VIM-模式" class="headerlink" title="VIM 模式"></a>VIM 模式</h2><ul><li>Normal mode(common mode，以下簡稱 c-mode)：<br>您一進入 VIM 就是處於 c-mode，只能下按鍵指令，不能輸入文字。這些指令可能是游標移動的指令，也可能是編輯指令或尋找替換指令。</li><li>Insert mode(i-mode)：<br>按 i 就會進入 i-mode，此時才可以鍵入文字，寫您的文章，按 Esc 又會回到 c-mode。</li><li>Ed mode(common-line mode，e-mode)：<br>按冒號：(別忘了 Shift 鍵)就會進入 e-mode，左下角會有一個冒號：出現可下 ed 指令。也是按 Esc 回 c-mode。反正正常狀態都是處於 c-mode，這樣才不會把您辛苦打字的文章給隨便搞亂掉。</li></ul><h2 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h2><ul><li>打开文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim demo.txt</span><br></pre></td></tr></table></figure><p>该模式下，如果存在文件则编辑文件，否则新增一个“demo.txt”的文件</p><ul><li><p>编辑文件<br>进入 vim 后，键盘键入“i”则进入“i-mode”模式。游标由方向键控制。通过 del 键可以删除字符</p></li><li><p>存档离开<br>编辑好文件后，输入“Esc”离开回到“c-mode”模式。“:w”写入文件，但不会离开 vim。“:q”离开 vim。“:wq”则表示保存并离开。（q-quit-离开，w-write-写入）</p></li></ul><h2 id="游标移动"><a href="#游标移动" class="headerlink" title="游标移动"></a>游标移动</h2><p>基本移动</p><ul><li>h 左，或 Backspace 或方向鍵</li><li>j 下，或 Enter 或 +（要 Shift 鍵），或方向鍵</li><li>k 上，或 方向鍵或 -（不必 Shift 鍵）</li><li>l 右，或 Space 或方向鍵</li></ul><p>进阶移动</p><ul><li>0 是數目字 0 而不是英文字母 o。或是 Home 鍵，移至行首，<br>（含空白字元）。</li><li>^ 移至第一個非空白字元，注意，要 Shift 鍵。</li><li>$ 移至行尾，或 End 鍵。要 Shift 鍵。<br>(在 regexp 中 ^ 是匹配行首，$ 是匹配行尾)</li><li>G 移至檔尾（最後一行的第一個非空白字元處）</li><li>gg 移至檔首（第一行之第一個非空白字元處）</li><li>n| 移至第 n 個字元(欄)處。注意，要用 Shift 鍵。n 是從頭起<br>算的。</li><li>:n 移至第 n 行行首。或 nG。</li></ul><p>特殊移动</p><ul><li><p>) 移至下一個句子（sentence）首。</p></li><li><p>( 移至上一個句子（sentence）首。</p></li><li><p>} 移至下一個段落（paragraph）首。</p></li><li><p>{ 移至上一個段落（paragraph）首。</p><p>(sentence 是以 . ! ? 為區格。paragraph 是以空白行為區格。)</p></li></ul><h2 id="进入-i-mode-模式-指令"><a href="#进入-i-mode-模式-指令" class="headerlink" title="进入 i-mode 模式 指令"></a>进入 i-mode 模式 指令</h2><ul><li>i 在游标所在字符前开始输入文字（insert）</li><li>a 在游标所在字符后开始输入文字（append）</li><li>o 在游标所在行下新开一行开始输入文字（open）</li><li>I 行首开始输入文字</li><li>A 行尾开始输入文字</li><li>O 在游标所在行上新开一行开始输入文字（open）</li><li>J 将一行整行连接本行（join）</li></ul><h2 id="删除指令"><a href="#删除指令" class="headerlink" title="删除指令"></a>删除指令</h2><ul><li>dd 删除整行（delete line）</li><li>dw 删除当前字（delete word）</li><li>dG 删至档底</li><li>dlG 删至档首</li><li>D 删至行尾 或 d$</li><li>d0 删至行首 或 d^</li></ul><h2 id="取代-amp-还原指令"><a href="#取代-amp-还原指令" class="headerlink" title="取代&amp;还原指令"></a>取代&amp;还原指令</h2><ul><li>r 取代当前所在字符</li><li>R 取代字符直至 Es 吃为止</li><li>cc 取代整行内容 或大写 S</li><li>C 取代至行尾</li><li>c0 取代至行首</li><li>s 替换一个字符为当前输入的字符，与 R 不同，R 是覆盖而 s 是插入式。</li><li>u undo,撤销改动</li><li>U 在游标没有离开本行之前，撤销所有编辑动作</li><li>(window - Crtl+r) (mac- control + r) redo 恢复撤销的编辑内容</li></ul><h2 id="数目字"><a href="#数目字" class="headerlink" title="数目字"></a>数目字</h2><ul><li>5dd 删除游标所在行起算以下 5 行内容</li><li>3r 按下 3r 后，你输入的字符则会替换当前游标所在的三个字符</li><li>5J 5 行合并成一行</li></ul><h2 id="重排功能"><a href="#重排功能" class="headerlink" title="重排功能"></a>重排功能</h2><ul><li>“&gt;&gt;” 整行向右移一個 shiftwidth（默认 8 字符，可配置）</li><li>“&lt;&lt;” 整行向左移一個 shiftwidth（默认 8 字符，可配置）</li></ul><p>设置 shiftwidth<br>:set shiftwidth=4, shiftwidth 可缩写成 sw。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set shiftwidth=4  // :set sw=4</span><br></pre></td></tr></table></figure><ul><li>:ce(nter) 本行文字置中。注意是冒号命令！</li><li>:ri(ght) 本行文字靠右。</li><li>:le(ft) 本行文字靠左。</li></ul><h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><ul><li>yy 复制游标所在行整行</li><li>2yy（y2y）复制两行</li><li>y^ （y0）复制至行首。不含游标所在字符</li><li>y$ 复制至行尾。含游标所在处字符</li><li>y2w 复制 2 个字符</li><li>yG 复制至档尾</li><li>y1G 复制至档首</li><li>p（小写 p）代表贴至游标后(下)</li><li>P（大写 P）代表贴至游标前(上)</li></ul><p>注意： 整行的复制，按 p 或 P 時是插入式的贴在下（上）一行。非整行的复制則是贴在游标所在处之后（前）。</p><ul><li>“ayy 將本行文字复制到 a 缓存区 (26 字母都行)</li><li>“ap 将 a 缓冲区的内容贴上</li></ul><h2 id="666-重复上次编辑动作指令"><a href="#666-重复上次编辑动作指令" class="headerlink" title="666 重复上次编辑动作指令"></a>666 重复上次编辑动作指令</h2><ul><li>. 英文句号。重复上一次的编辑动作（游标移动，冒号命令不算）</li></ul><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>在 c-mode 模式下操作,按下”/“会在左下角出现”/“，然后输入你要查找的字符输入 enter 开始查找</p><ul><li>/ 向前（下）查找 xxx</li><li>? 向后（上）查找 xxx</li><li>n 继续查找</li><li>N 继续查找（反向）</li></ul><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h2><p>:[range]s/pattern/string/[c,e,g,i]</p><p>rang 指范，1,7 表示 1 到 7 行，1,$表示第一行到最后一行，也可以用%表示<br>pattern 要被替换的字符串，可以用 regexp 表示<br>string 将 pattern 替换成 string<br>c confirm 每次替换前询问<br>e 不显示 error<br>g global 全局替换<br>i ignore 忽略大小写</p><h2 id="书签功能"><a href="#书签功能" class="headerlink" title="书签功能"></a>书签功能</h2><p>mx x 代表 26 个小写字母，游标所在处会被 mark</p><ul><li>`x 回到标签设定位置</li><li>‘x 回到标签设定行行首</li></ul><h2 id="离开"><a href="#离开" class="headerlink" title="离开"></a>离开</h2><ul><li>:q 如果本文有修改且没有存档，会警告且无法离开</li><li>:q! 丢弃所有修改，强制离开</li><li>:wq 存档并离开。纵使存档未曾修改也会再存档一次</li><li>:x 也是存档并离开。但存档未曾修改则不会再存档一次</li><li>ZZ 跟:x 一样</li><li>:w 档名 另存它档。如果不加档名则写入愿档</li></ul><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ul><li>vim -x [档名]</li></ul><h2 id="標示指令"><a href="#標示指令" class="headerlink" title="標示指令"></a>標示指令</h2><ul><li>v 小写 v，标示当前字符，按下 v 后移动游标可以把走过的地方标示起来。再按一个 v 退出</li><li>V 大写 V，标示当前行，按下 V 后会整行标示起来包括前后空白。上下移动会标示多行</li><li>ctrl + v 方块标示，可纵向标示矩形区域</li><li>d 删除标示区内容</li><li>y 复制标示去内容</li><li>Shift + &gt; 标示区內容向右移一个 Tab。</li><li>Shift + &lt; 标示区內容向左移一个 Tab。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 组件设计 - addEventListener &amp; removeEventListener</title>
      <link href="2020/01/15/advanced-vue-01/"/>
      <url>2020/01/15/advanced-vue-01/</url>
      
        <content type="html"><![CDATA[<h2 id="如何优化在vue组件中使用addEventListener-和-removeEventListener"><a href="#如何优化在vue组件中使用addEventListener-和-removeEventListener" class="headerlink" title="如何优化在vue组件中使用addEventListener 和 removeEventListener"></a>如何优化在vue组件中使用addEventListener 和 removeEventListener</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created () &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleKeydown</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  destroyed () &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleKeydown</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    handleKeydown (e) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">key</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="去掉在methods里面定义方法"><a href="#去掉在methods里面定义方法" class="headerlink" title="去掉在methods里面定义方法"></a>去掉在methods里面定义方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">handleKeydown</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">key</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleKeydown</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  destroyed () &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleKeydown</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="去掉挂载到当前实例"><a href="#去掉挂载到当前实例" class="headerlink" title="去掉挂载到当前实例"></a>去掉挂载到当前实例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created () &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handle</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">key</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, handle)</span><br><span class="line">    <span class="variable language_">this</span>.$once(<span class="string">&#x27;hook:destroyed&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, handle)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器开发工具小技巧</title>
      <link href="2019/11/04/chrome-devtools-tips/"/>
      <url>2019/11/04/chrome-devtools-tips/</url>
      
        <content type="html"><![CDATA[<h2 id="通过拖拽的方式移动-DOM-元素的位置"><a href="#通过拖拽的方式移动-DOM-元素的位置" class="headerlink" title="通过拖拽的方式移动 DOM 元素的位置"></a>通过拖拽的方式移动 DOM 元素的位置</h2><p><img src="drag-and-drop.gif" alt=""></p><h2 id="在控制面板-console-中获取当前选中的元素"><a href="#在控制面板-console-中获取当前选中的元素" class="headerlink" title="在控制面板 console 中获取当前选中的元素"></a>在控制面板 console 中获取当前选中的元素</h2><p><img src="current-selected-element.gif" alt=""></p><h2 id="使用最后一次在控制面板-console-操作中返回的值"><a href="#使用最后一次在控制面板-console-操作中返回的值" class="headerlink" title="使用最后一次在控制面板 console 操作中返回的值"></a>使用最后一次在控制面板 console 操作中返回的值</h2><p><img src="last-value.gif" alt=""></p><h2 id="在控制面板-console-通过-shift-enter-组合实现换行"><a href="#在控制面板-console-通过-shift-enter-组合实现换行" class="headerlink" title="在控制面板 console 通过 shift + enter 组合实现换行"></a>在控制面板 console 通过 shift + enter 组合实现换行</h2><p><img src="shift-enter.gif" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
